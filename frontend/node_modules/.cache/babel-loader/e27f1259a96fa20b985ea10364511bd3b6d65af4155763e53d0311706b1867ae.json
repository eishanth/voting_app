{"ast":null,"code":"var _jsxFileName = \"D:\\\\voting\\\\voting_app\\\\frontend\\\\src\\\\pages\\\\ViewPoll.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewPoll = () => {\n  _s();\n  var _poll$creator, _poll$creator2, _poll$settings, _poll$settings2;\n  const {\n    id,\n    token\n  } = useParams();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const [poll, setPoll] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [hasVoted, setHasVoted] = useState(false);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [visibleFollowUps, setVisibleFollowUps] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [followUpAnswers, setFollowUpAnswers] = useState({});\n  const [passwordPrompt, setPasswordPrompt] = useState(\"\");\n  const [showPasswordInput, setShowPasswordInput] = useState(false);\n  const [pollPassword, setPollPassword] = useState(\"\");\n  const [showVoters, setShowVoters] = useState(null);\n  console.log(\"--- Debugging User/Creator ID Comparison ---\");\n  console.log(\"Current user object:\", user);\n  console.log(\"Poll object:\", poll); // Make sure poll data is loaded\n  if (user && poll !== null && poll !== void 0 && poll.creator) {\n    console.log(\"user._id:\", user.id);\n    console.log(\"poll.creator._id:\", poll.creator._id);\n    console.log(\"String(user._id):\", String(user.id));\n    console.log(\"String(poll.creator._id):\", String(poll.creator._id));\n    console.log(\"Comparison result (String(user._id) === String(poll.creator._id)):\", String(user._id) === String(poll.creator._id));\n  } else {\n    console.log(\"User or Poll Creator is not yet loaded/available.\");\n  }\n  console.log(\"--- End Debug ---\");\n  useEffect(() => {\n    fetchPoll();\n  }, [id, token]);\n  const fetchPoll = async password => {\n    try {\n      setLoading(true);\n      let response;\n      if (token) {\n        response = await axios.post(`/api/polls/invite/${token}/verify`, {\n          password\n        });\n      } else {\n        response = await axios.get(`/api/polls/${id}`);\n      }\n      setPoll(response.data.poll);\n      setHasVoted(response.data.hasVoted || false);\n\n      // Initialize answers\n      const initialAnswers = {};\n      response.data.poll.questions.forEach(question => {\n        initialAnswers[question._id] = null;\n      });\n      setAnswers(initialAnswers);\n      setShowPasswordInput(false);\n      setPasswordPrompt(\"\");\n    } catch (error) {\n      var _error$response, _error$response2;\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n        setShowPasswordInput(true);\n        setPasswordPrompt(\"Enter the poll password to view this private poll.\");\n      } else {\n        var _error$response3, _error$response3$data;\n        setError(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || \"Failed to load poll\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n    setError(\"\");\n    await fetchPoll(pollPassword);\n  };\n\n  // --- Update: handleAnswerChange to clear unrelated follow-up answers for single-choice ---\n  const handleAnswerChange = (questionId, answer, hasFollowUp = false) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n\n    // For single-choice, clear all follow-up answers except for the selected option\n    setFollowUpAnswers(prev => {\n      const newAnswers = {\n        ...prev\n      };\n      if (newAnswers[questionId]) {\n        Object.keys(newAnswers[questionId]).forEach(optIdx => {\n          if (parseInt(optIdx) !== answer) {\n            delete newAnswers[questionId][optIdx];\n          }\n        });\n      }\n      return newAnswers;\n    });\n\n    // Show/hide follow-up\n    setVisibleFollowUps(prev => ({\n      ...prev,\n      [questionId]: hasFollowUp\n    }));\n  };\n  const handleFollowUpAnswerChange = (questionId, optionIndex, answer) => {\n    setFollowUpAnswers(prev => ({\n      ...prev,\n      [questionId]: {\n        ...prev[questionId],\n        [optionIndex]: answer\n      }\n    }));\n  };\n  const handleSubmitVote = async e => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      setError(\"\");\n\n      // Validate answers\n      const hasUnansweredRequired = poll.questions.some(question => {\n        const answer = answers[question._id];\n        if (!question.required) return false;\n\n        // For single choice\n        if (question.type === \"single-choice\") {\n          return answer === null || answer === undefined;\n        }\n        // For multiple choice\n        if (question.type === \"multiple-choice\") {\n          return !Array.isArray(answer) || answer.length === 0;\n        }\n        return false;\n      });\n      if (hasUnansweredRequired) {\n        setError(\"Please answer all required questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // --- Fix: handleSubmitVote follow-up validation for single-choice ---\n      const hasUnansweredFollowUps = poll.questions.some(question => {\n        const answer = answers[question._id];\n        if (answer === null || answer === undefined) return false;\n        // For single choice\n        if (!Array.isArray(answer)) {\n          const option = question.options[answer];\n          if (option !== null && option !== void 0 && option.followUp) {\n            // Fix: check followUpAnswers[question._id]?.[answer] for the selected option index\n            const followUpAnswer = followUpAnswers[question._id] && followUpAnswers[question._id][answer];\n            return followUpAnswer === undefined || followUpAnswer === null;\n          }\n        } else {\n          // For multiple choice, only require follow-up for selected options with followUp\n          return answer.some(optionIndex => {\n            const option = question.options[optionIndex];\n            if (option !== null && option !== void 0 && option.followUp) {\n              const followUpAnswer = followUpAnswers[question._id] && followUpAnswers[question._id][optionIndex];\n              return followUpAnswer === undefined || followUpAnswer === null;\n            }\n            return false;\n          });\n        }\n        return false;\n      });\n      if (hasUnansweredFollowUps) {\n        setError(\"Please answer all follow-up questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // Transform answers to match backend expectations\n      const transformedAnswers = poll.questions.map(question => {\n        const answer = answers[question._id];\n        if (answer === null || answer === undefined) return null;\n        const transformedAnswer = {\n          questionId: question._id,\n          answer: answer,\n          followUpAnswers: []\n        };\n\n        // Handle follow-up answers\n        if (Array.isArray(answer)) {\n          // Multiple choice\n          answer.forEach(optionIndex => {\n            var _followUpAnswers$ques;\n            if (((_followUpAnswers$ques = followUpAnswers[question._id]) === null || _followUpAnswers$ques === void 0 ? void 0 : _followUpAnswers$ques[optionIndex]) !== undefined) {\n              transformedAnswer.followUpAnswers.push({\n                optionIndex,\n                answer: followUpAnswers[question._id][optionIndex]\n              });\n            }\n          });\n        } else {\n          var _followUpAnswers$ques2;\n          // Single choice\n          if (((_followUpAnswers$ques2 = followUpAnswers[question._id]) === null || _followUpAnswers$ques2 === void 0 ? void 0 : _followUpAnswers$ques2[answer]) !== undefined) {\n            transformedAnswer.followUpAnswers.push({\n              optionIndex: answer,\n              answer: followUpAnswers[question._id][answer]\n            });\n          }\n        }\n        return transformedAnswer;\n      }).filter(Boolean);\n      const response = await axios.post(`/api/polls/${poll._id}/vote`, {\n        answers: transformedAnswers\n      });\n      setHasVoted(true);\n      // Refetch the poll data after successful vote to get updated results with potentially populated voters\n      fetchPoll();\n      setShowResults(true);\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response5$data;\n      console.error(\"Error submitting vote:\", error);\n\n      // Check if the error is the 'already voted' message\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 400 && ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) === \"You have already voted on this poll\") {\n        // If already voted, update state to show results instead of error\n        setHasVoted(true); // Ensure hasVoted is true\n        // Optionally, refetch poll to get latest results if needed, or trust the existing poll state\n        // fetchPoll(); // Uncomment this line if you need to refetch for latest results\n      } else {\n        var _error$response6, _error$response6$data;\n        // For other errors, display the error message\n        setError(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || \"Failed to submit vote. Please try again.\");\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const calculatePercentage = (votes, total) => {\n    if (total === 0) return 0;\n    return Math.round(votes / total * 100);\n  };\n\n  // Show invite link if private poll and creator viewing\n  const shouldShowInviteLink = poll && !poll.isPublic && String(user === null || user === void 0 ? void 0 : user.id) === String((_poll$creator = poll.creator) === null || _poll$creator === void 0 ? void 0 : _poll$creator._id) && poll.inviteToken;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-poll-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-poll-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this);\n  }\n  if (showPasswordInput) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-poll-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-lock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), passwordPrompt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handlePasswordSubmit,\n          style: {\n            maxWidth: 400,\n            margin: \"0 auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-input\",\n            placeholder: \"Poll password\",\n            value: pollPassword,\n            onChange: e => setPollPassword(e.target.value),\n            required: true,\n            style: {\n              marginBottom: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary btn-full\",\n            children: \"Unlock Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-poll-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: [shouldShowInviteLink && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), \"Invite link:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${window.location.origin}/poll/invite/${poll.inviteToken}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [window.location.origin, \"/poll/invite/\", poll.inviteToken]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginBottom: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), poll.pollType && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"6px 12px\",\n              fontSize: 14,\n              backgroundColor: poll.pollType === \"business\" ? \"#e3f2fd\" : \"#f3e5f5\",\n              color: poll.pollType === \"business\" ? \"#1976d2\" : \"#7b1fa2\",\n              borderRadius: 8,\n              textTransform: \"uppercase\",\n              fontWeight: 600,\n              letterSpacing: \"0.5px\"\n            },\n            children: poll.pollType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), poll.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: poll.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-creator\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Created by \", ((_poll$creator2 = poll.creator) === null || _poll$creator2 === void 0 ? void 0 : _poll$creator2.name) || \"Anonymous\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-chart-bar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), \" \", poll.totalResponses, \" \", \"responses\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginLeft: \"16px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: `fas fa-${(_poll$settings = poll.settings) !== null && _poll$settings !== void 0 && _poll$settings.showUserDetails ? \"eye\" : \"eye-slash\"}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), (_poll$settings2 = poll.settings) !== null && _poll$settings2 !== void 0 && _poll$settings2.showUserDetails ? \"User details visible to creator\" : \"User details hidden from creator\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), \"You must be signed in to vote in this poll.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this) : !hasVoted ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitVote,\n        className: \"poll-form\",\n        children: [poll.questions.map((question, index) => {\n          var _question$options$ans;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Question \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"question-text\",\n              children: question.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"option-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: question._id,\n                  value: optionIndex,\n                  onChange: e => handleAnswerChange(question._id, parseInt(e.target.value), option.followUp !== null),\n                  required: question.required\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-text\",\n                  children: option.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 23\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), visibleFollowUps[question._id] && !Array.isArray(answers[question._id]) && ((_question$options$ans = question.options[answers[question._id]]) === null || _question$options$ans === void 0 ? void 0 : _question$options$ans.followUp) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"follow-up-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"follow-up-question\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"question-text\",\n                  children: question.options[answers[question._id]].followUp.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"options-container\",\n                  children: question.options[answers[question._id]].followUp.options.map((followUpOption, followUpOptionIndex) => {\n                    var _followUpAnswers$ques3;\n                    return /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"option-label\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"radio\",\n                        name: `${question._id}-followup`,\n                        value: followUpOptionIndex,\n                        checked: ((_followUpAnswers$ques3 = followUpAnswers[question._id]) === null || _followUpAnswers$ques3 === void 0 ? void 0 : _followUpAnswers$ques3[answers[question._id]]) === followUpOptionIndex,\n                        onChange: e => handleFollowUpAnswerChange(question._id, answers[question._id], parseInt(e.target.value)),\n                        required: question.options[answers[question._id]].followUp.required\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 439,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"option-text\",\n                        children: followUpOption.text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 460,\n                        columnNumber: 33\n                      }, this)]\n                    }, followUpOptionIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 21\n            }, this)]\n          }, question._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-lg btn-full\",\n          disabled: submitting,\n          children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 19\n            }, this), \"Submitting...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-vote-yea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 19\n            }, this), \"Submit Vote\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thank you for voting! Here are the current results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), poll.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question-text\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-container\",\n            children: question.options.map((option, optionIndex) => {\n              var _poll$settings3, _poll$creator3, _poll$settings5, _poll$creator5;\n              const percentage = calculatePercentage(option.votes, poll.totalResponses);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"option-text\",\n                    children: option.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"result-percentage\",\n                    children: [percentage, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 513,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-fill\",\n                    style: {\n                      width: `${percentage}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-votes\",\n                  style: {\n                    cursor: (_poll$settings3 = poll.settings) !== null && _poll$settings3 !== void 0 && _poll$settings3.showUserDetails && String(user === null || user === void 0 ? void 0 : user.id) === String((_poll$creator3 = poll.creator) === null || _poll$creator3 === void 0 ? void 0 : _poll$creator3._id) && option.votes > 0 ? 'pointer' : 'default'\n                  },\n                  onClick: () => {\n                    var _poll$settings4, _poll$creator4;\n                    if ((_poll$settings4 = poll.settings) !== null && _poll$settings4 !== void 0 && _poll$settings4.showUserDetails && String(user === null || user === void 0 ? void 0 : user.id) === String((_poll$creator4 = poll.creator) === null || _poll$creator4 === void 0 ? void 0 : _poll$creator4._id) && option.votes > 0) {\n                      setShowVoters({\n                        questionId: question._id,\n                        optionIndex\n                      });\n                    }\n                  },\n                  children: [option.votes, \" votes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 523,\n                  columnNumber: 25\n                }, this), showVoters && showVoters.questionId === question._id && showVoters.optionIndex === optionIndex && ((_poll$settings5 = poll.settings) === null || _poll$settings5 === void 0 ? void 0 : _poll$settings5.showUserDetails) && String(user === null || user === void 0 ? void 0 : user.id) === String((_poll$creator5 = poll.creator) === null || _poll$creator5 === void 0 ? void 0 : _poll$creator5._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"voter-modal-overlay\",\n                  onClick: () => setShowVoters(null),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"voter-modal\",\n                    onClick: e => e.stopPropagation(),\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: [\"Voters for \\\"\", option.text, \"\\\"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 538,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: option.voters && option.voters.length > 0 ? option.voters.map((v, idx) => {\n                        var _v$user, _v$user2;\n                        return /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                            className: \"fas fa-user\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 543,\n                            columnNumber: 39\n                          }, this), \" \", ((_v$user2 = v.user) === null || _v$user2 === void 0 ? void 0 : _v$user2.name) || 'Anonymous']\n                        }, ((_v$user = v.user) === null || _v$user === void 0 ? void 0 : _v$user._id) || idx, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 542,\n                          columnNumber: 37\n                        }, this);\n                      }) : /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: \"No voters yet.\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 547,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 539,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-secondary\",\n                      onClick: () => setShowVoters(null),\n                      children: \"Close\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 550,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 27\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 17\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewPoll, \"ycvRGDwKxD/kTQeuQELGIwsDfSg=\", false, function () {\n  return [useParams, useLocation, useAuth];\n});\n_c = ViewPoll;\nexport default ViewPoll;\nvar _c;\n$RefreshReg$(_c, \"ViewPoll\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewPoll","_s","_poll$creator","_poll$creator2","_poll$settings","_poll$settings2","id","token","location","user","poll","setPoll","loading","setLoading","error","setError","hasVoted","setHasVoted","answers","setAnswers","submitting","setSubmitting","visibleFollowUps","setVisibleFollowUps","showResults","setShowResults","followUpAnswers","setFollowUpAnswers","passwordPrompt","setPasswordPrompt","showPasswordInput","setShowPasswordInput","pollPassword","setPollPassword","showVoters","setShowVoters","console","log","creator","_id","String","fetchPoll","password","response","post","get","data","initialAnswers","questions","forEach","question","_error$response","_error$response2","status","_error$response3","_error$response3$data","message","handlePasswordSubmit","e","preventDefault","handleAnswerChange","questionId","answer","hasFollowUp","prev","newAnswers","Object","keys","optIdx","parseInt","handleFollowUpAnswerChange","optionIndex","handleSubmitVote","hasUnansweredRequired","some","required","type","undefined","Array","isArray","length","hasUnansweredFollowUps","option","options","followUp","followUpAnswer","transformedAnswers","map","transformedAnswer","_followUpAnswers$ques","push","_followUpAnswers$ques2","filter","Boolean","_error$response4","_error$response5","_error$response5$data","_error$response6","_error$response6$data","calculatePercentage","votes","total","Math","round","shouldShowInviteLink","isPublic","inviteToken","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","maxWidth","margin","placeholder","value","onChange","target","marginBottom","href","window","origin","rel","display","alignItems","justifyContent","title","pollType","padding","fontSize","backgroundColor","color","borderRadius","textTransform","fontWeight","letterSpacing","description","name","totalResponses","marginLeft","settings","showUserDetails","index","_question$options$ans","text","followUpOption","followUpOptionIndex","_followUpAnswers$ques3","checked","disabled","_poll$settings3","_poll$creator3","_poll$settings5","_poll$creator5","percentage","width","cursor","onClick","_poll$settings4","_poll$creator4","stopPropagation","voters","v","idx","_v$user","_v$user2","_c","$RefreshReg$"],"sources":["D:/voting/voting_app/frontend/src/pages/ViewPoll.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst ViewPoll = () => {\n  const { id, token } = useParams();\n  const location = useLocation();\n  const { user } = useAuth();\n  const [poll, setPoll] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [hasVoted, setHasVoted] = useState(false);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [visibleFollowUps, setVisibleFollowUps] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [followUpAnswers, setFollowUpAnswers] = useState({});\n  const [passwordPrompt, setPasswordPrompt] = useState(\"\");\n  const [showPasswordInput, setShowPasswordInput] = useState(false);\n  const [pollPassword, setPollPassword] = useState(\"\");\n  const [showVoters, setShowVoters] = useState(null);\n\n  console.log(\"--- Debugging User/Creator ID Comparison ---\");\n  console.log(\"Current user object:\", user);\n  console.log(\"Poll object:\", poll); // Make sure poll data is loaded\n  if (user && poll?.creator) {\n    console.log(\"user._id:\", user.id);\n    console.log(\"poll.creator._id:\", poll.creator._id);\n    console.log(\"String(user._id):\", String(user.id));\n    console.log(\"String(poll.creator._id):\", String(poll.creator._id));\n    console.log(\"Comparison result (String(user._id) === String(poll.creator._id)):\", String(user._id) === String(poll.creator._id));\n  } else {\n    console.log(\"User or Poll Creator is not yet loaded/available.\");\n  }\n  console.log(\"--- End Debug ---\");\n\n\n  useEffect(() => {\n    fetchPoll();\n  }, [id, token]);\n\n  const fetchPoll = async (password) => {\n    try {\n      setLoading(true);\n      let response;\n      if (token) {\n        response = await axios.post(`/api/polls/invite/${token}/verify`, {\n          password,\n        });\n      } else {\n        response = await axios.get(`/api/polls/${id}`);\n      }\n      setPoll(response.data.poll);\n      setHasVoted(response.data.hasVoted || false);\n\n      // Initialize answers\n      const initialAnswers = {};\n      response.data.poll.questions.forEach((question) => {\n        initialAnswers[question._id] = null;\n      });\n      setAnswers(initialAnswers);\n      setShowPasswordInput(false);\n      setPasswordPrompt(\"\");\n    } catch (error) {\n      if (error.response?.status === 401 || error.response?.status === 403) {\n        setShowPasswordInput(true);\n        setPasswordPrompt(\"Enter the poll password to view this private poll.\");\n      } else {\n        setError(error.response?.data?.message || \"Failed to load poll\");\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePasswordSubmit = async (e) => {\n    e.preventDefault();\n    setError(\"\");\n    await fetchPoll(pollPassword);\n  };\n\n  // --- Update: handleAnswerChange to clear unrelated follow-up answers for single-choice ---\n  const handleAnswerChange = (questionId, answer, hasFollowUp = false) => {\n    setAnswers((prev) => ({\n      ...prev,\n      [questionId]: answer,\n    }));\n\n    // For single-choice, clear all follow-up answers except for the selected option\n    setFollowUpAnswers((prev) => {\n      const newAnswers = { ...prev };\n      if (newAnswers[questionId]) {\n        Object.keys(newAnswers[questionId]).forEach((optIdx) => {\n          if (parseInt(optIdx) !== answer) {\n            delete newAnswers[questionId][optIdx];\n          }\n        });\n      }\n      return newAnswers;\n    });\n\n    // Show/hide follow-up\n    setVisibleFollowUps((prev) => ({\n      ...prev,\n      [questionId]: hasFollowUp,\n    }));\n  };\n\n  const handleFollowUpAnswerChange = (questionId, optionIndex, answer) => {\n    setFollowUpAnswers((prev) => ({\n      ...prev,\n      [questionId]: {\n        ...prev[questionId],\n        [optionIndex]: answer,\n      },\n    }));\n  };\n\n  const handleSubmitVote = async (e) => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      setError(\"\");\n\n      // Validate answers\n      const hasUnansweredRequired = poll.questions.some((question) => {\n        const answer = answers[question._id];\n        if (!question.required) return false;\n\n        // For single choice\n        if (question.type === \"single-choice\") {\n          return answer === null || answer === undefined;\n        }\n        // For multiple choice\n        if (question.type === \"multiple-choice\") {\n          return !Array.isArray(answer) || answer.length === 0;\n        }\n        return false;\n      });\n\n      if (hasUnansweredRequired) {\n        setError(\"Please answer all required questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // --- Fix: handleSubmitVote follow-up validation for single-choice ---\n      const hasUnansweredFollowUps = poll.questions.some((question) => {\n        const answer = answers[question._id];\n        if (answer === null || answer === undefined) return false;\n        // For single choice\n        if (!Array.isArray(answer)) {\n          const option = question.options[answer];\n          if (option?.followUp) {\n            // Fix: check followUpAnswers[question._id]?.[answer] for the selected option index\n            const followUpAnswer =\n              followUpAnswers[question._id] &&\n              followUpAnswers[question._id][answer];\n            return followUpAnswer === undefined || followUpAnswer === null;\n          }\n        } else {\n          // For multiple choice, only require follow-up for selected options with followUp\n          return answer.some((optionIndex) => {\n            const option = question.options[optionIndex];\n            if (option?.followUp) {\n              const followUpAnswer =\n                followUpAnswers[question._id] &&\n                followUpAnswers[question._id][optionIndex];\n              return followUpAnswer === undefined || followUpAnswer === null;\n            }\n            return false;\n          });\n        }\n        return false;\n      });\n\n      if (hasUnansweredFollowUps) {\n        setError(\"Please answer all follow-up questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // Transform answers to match backend expectations\n      const transformedAnswers = poll.questions\n        .map((question) => {\n          const answer = answers[question._id];\n          if (answer === null || answer === undefined) return null;\n\n          const transformedAnswer = {\n            questionId: question._id,\n            answer: answer,\n            followUpAnswers: [],\n          };\n\n          // Handle follow-up answers\n          if (Array.isArray(answer)) {\n            // Multiple choice\n            answer.forEach((optionIndex) => {\n              if (followUpAnswers[question._id]?.[optionIndex] !== undefined) {\n                transformedAnswer.followUpAnswers.push({\n                  optionIndex,\n                  answer: followUpAnswers[question._id][optionIndex],\n                });\n              }\n            });\n          } else {\n            // Single choice\n            if (followUpAnswers[question._id]?.[answer] !== undefined) {\n              transformedAnswer.followUpAnswers.push({\n                optionIndex: answer,\n                answer: followUpAnswers[question._id][answer],\n              });\n            }\n          }\n\n          return transformedAnswer;\n        })\n        .filter(Boolean);\n\n      const response = await axios.post(`/api/polls/${poll._id}/vote`, {\n        answers: transformedAnswers,\n      });\n\n      setHasVoted(true);\n      // Refetch the poll data after successful vote to get updated results with potentially populated voters\n      fetchPoll();\n      setShowResults(true);\n    } catch (error) {\n      console.error(\"Error submitting vote:\", error);\n\n      // Check if the error is the 'already voted' message\n      if (error.response?.status === 400 && error.response?.data?.message === \"You have already voted on this poll\") {\n        // If already voted, update state to show results instead of error\n        setHasVoted(true); // Ensure hasVoted is true\n        // Optionally, refetch poll to get latest results if needed, or trust the existing poll state\n        // fetchPoll(); // Uncomment this line if you need to refetch for latest results\n      } else {\n        // For other errors, display the error message\n        setError(\n          error.response?.data?.message ||\n            \"Failed to submit vote. Please try again.\"\n        );\n      }\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const calculatePercentage = (votes, total) => {\n    if (total === 0) return 0;\n    return Math.round((votes / total) * 100);\n  };\n\n  // Show invite link if private poll and creator viewing\n  const shouldShowInviteLink = poll && !poll.isPublic && String(user?.id) === String(poll.creator?._id) && poll.inviteToken;\n\n  if (loading) {\n    return (\n      <div className=\"view-poll-page\">\n        <div className=\"container-sm\">\n          <div className=\"loading-container\">\n            <div className=\"spinner\"></div>\n            <p>Loading poll...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"view-poll-page\">\n        <div className=\"container-sm\">\n          <div className=\"alert alert-error\">\n            <i className=\"fas fa-exclamation-circle\"></i>\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (showPasswordInput) {\n    return (\n      <div className=\"view-poll-page\">\n        <div className=\"container-sm\">\n          <div className=\"alert alert-warning\">\n            <i className=\"fas fa-lock\"></i>\n            {passwordPrompt}\n          </div>\n          <form\n            onSubmit={handlePasswordSubmit}\n            style={{ maxWidth: 400, margin: \"0 auto\" }}\n          >\n            <input\n              type=\"password\"\n              className=\"form-input\"\n              placeholder=\"Poll password\"\n              value={pollPassword}\n              onChange={(e) => setPollPassword(e.target.value)}\n              required\n              style={{ marginBottom: 12 }}\n            />\n            <button type=\"submit\" className=\"btn btn-primary btn-full\">\n              Unlock Poll\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"view-poll-page\">\n      <div className=\"container-sm\">\n        {shouldShowInviteLink && (\n          <div className=\"alert alert-info\" style={{ marginBottom: 16 }}>\n            <i className=\"fas fa-link\"></i>\n            Invite link:{\" \"}\n            <a\n              href={`${window.location.origin}/poll/invite/${poll.inviteToken}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {window.location.origin}/poll/invite/{poll.inviteToken}\n            </a>\n          </div>\n        )}\n\n        <div className=\"poll-header\">\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              marginBottom: \"8px\",\n            }}\n          >\n            <h1>{poll.title}</h1>\n            {poll.pollType && (\n              <span\n                style={{\n                  padding: \"6px 12px\",\n                  fontSize: 14,\n                  backgroundColor:\n                    poll.pollType === \"business\" ? \"#e3f2fd\" : \"#f3e5f5\",\n                  color: poll.pollType === \"business\" ? \"#1976d2\" : \"#7b1fa2\",\n                  borderRadius: 8,\n                  textTransform: \"uppercase\",\n                  fontWeight: 600,\n                  letterSpacing: \"0.5px\",\n                }}\n              >\n                {poll.pollType}\n              </span>\n            )}\n          </div>\n          {poll.description && <p>{poll.description}</p>}\n\n          <div className=\"poll-meta\">\n            <div className=\"poll-creator\">\n              <i className=\"fas fa-user\"></i>\n              <span>Created by {poll.creator?.name || \"Anonymous\"}</span>\n            </div>\n            <div className=\"poll-stats\">\n              <span>\n                <i className=\"fas fa-chart-bar\"></i> {poll.totalResponses}{\" \"}\n                responses\n              </span>\n              <span style={{ marginLeft: \"16px\" }}>\n                <i\n                  className={`fas fa-${\n                    poll.settings?.showUserDetails ? \"eye\" : \"eye-slash\"\n                  }`}\n                ></i>\n                {poll.settings?.showUserDetails\n                  ? \"User details visible to creator\"\n                  : \"User details hidden from creator\"}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {!user ? (\n          <div className=\"alert alert-warning\" style={{ marginBottom: 16 }}>\n            <i className=\"fas fa-lock\"></i>\n            You must be signed in to vote in this poll.\n          </div>\n        ) : !hasVoted ? (\n          <form onSubmit={handleSubmitVote} className=\"poll-form\">\n            {poll.questions.map((question, index) => (\n              <div key={question._id} className=\"question-container\">\n                <h3>Question {index + 1}</h3>\n                <p className=\"question-text\">{question.question}</p>\n\n                <div className=\"options-container\">\n                  {question.options.map((option, optionIndex) => (\n                    <label key={optionIndex} className=\"option-label\">\n                      <input\n                        type=\"radio\"\n                        name={question._id}\n                        value={optionIndex}\n                        onChange={(e) =>\n                          handleAnswerChange(\n                            question._id,\n                            parseInt(e.target.value),\n                            option.followUp !== null\n                          )\n                        }\n                        required={question.required}\n                      />\n                      <span className=\"option-text\">{option.text}</span>\n                    </label>\n                  ))}\n                </div>\n\n                {/* Render follow-up question if visible */}\n                {visibleFollowUps[question._id] &&\n                  !Array.isArray(answers[question._id]) &&\n                  question.options[answers[question._id]]?.followUp && (\n                    <div className=\"follow-up-container\">\n                      <div className=\"follow-up-question\">\n                        <p className=\"question-text\">\n                          {\n                            question.options[answers[question._id]].followUp\n                              .question\n                          }\n                        </p>\n                        <div className=\"options-container\">\n                          {question.options[\n                            answers[question._id]\n                          ].followUp.options.map(\n                            (followUpOption, followUpOptionIndex) => (\n                              <label\n                                key={followUpOptionIndex}\n                                className=\"option-label\"\n                              >\n                                <input\n                                  type=\"radio\"\n                                  name={`${question._id}-followup`}\n                                  value={followUpOptionIndex}\n                                  checked={\n                                    followUpAnswers[question._id]?.[\n                                      answers[question._id]\n                                    ] === followUpOptionIndex\n                                  }\n                                  onChange={(e) =>\n                                    handleFollowUpAnswerChange(\n                                      question._id,\n                                      answers[question._id],\n                                      parseInt(e.target.value)\n                                    )\n                                  }\n                                  required={\n                                    question.options[answers[question._id]]\n                                      .followUp.required\n                                  }\n                                />\n                                <span className=\"option-text\">\n                                  {followUpOption.text}\n                                </span>\n                              </label>\n                            )\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  )}\n              </div>\n            ))}\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary btn-lg btn-full\"\n              disabled={submitting}\n            >\n              {submitting ? (\n                <>\n                  <div className=\"spinner\"></div>\n                  Submitting...\n                </>\n              ) : (\n                <>\n                  <i className=\"fas fa-vote-yea\"></i>\n                  Submit Vote\n                </>\n              )}\n            </button>\n          </form>\n        ) : (\n          <div className=\"poll-results\">\n            <div className=\"results-header\">\n              <h2>Results</h2>\n              <p>Thank you for voting! Here are the current results:</p>\n            </div>\n\n            {poll.questions.map((question, index) => (\n              <div key={question._id} className=\"question-results\">\n                <h3>Question {index + 1}</h3>\n                <p className=\"question-text\">{question.question}</p>\n\n                <div className=\"results-container\">\n                  {question.options.map((option, optionIndex) => {\n                    const percentage = calculatePercentage(\n                      option.votes,\n                      poll.totalResponses\n                    );\n                    return (\n                      <div key={optionIndex} className=\"result-option\">\n                        <div className=\"result-header\">\n                          <span className=\"option-text\">{option.text}</span>\n                          <span className=\"result-percentage\">\n                            {percentage}%\n                          </span>\n                        </div>\n                        <div className=\"result-bar\">\n                          <div\n                            className=\"result-fill\"\n                            style={{ width: `${percentage}%` }}\n                          ></div>\n                        </div>\n                        <div\n                          className=\"result-votes\"\n                          style={{ cursor: poll.settings?.showUserDetails && String(user?.id) === String(poll.creator?._id) && option.votes > 0 ? 'pointer' : 'default' }}\n                          onClick={() => {\n                            if (poll.settings?.showUserDetails && String(user?.id) === String(poll.creator?._id) && option.votes > 0) {\n                              setShowVoters({ questionId: question._id, optionIndex });\n                            }\n                          }}\n                        >\n                          {option.votes} votes\n                        </div>\n                        {/* Voter modal for poll creator */}\n                        {showVoters && showVoters.questionId === question._id && showVoters.optionIndex === optionIndex && poll.settings?.showUserDetails && String(user?.id) === String(poll.creator?._id) && (\n                          <div className=\"voter-modal-overlay\" onClick={() => setShowVoters(null)}>\n                            <div className=\"voter-modal\" onClick={e => e.stopPropagation()}>\n                              <h4>Voters for \"{option.text}\"</h4>\n                              <ul>\n                                {option.voters && option.voters.length > 0 ? (\n                                  option.voters.map((v, idx) => (\n                                    <li key={v.user?._id || idx}>\n                                      <i className=\"fas fa-user\"></i> {v.user?.name || 'Anonymous'}\n                                    </li>\n                                  ))\n                                ) : (\n                                  <li>No voters yet.</li>\n                                )}\n                              </ul>\n                              <button className=\"btn btn-secondary\" onClick={() => setShowVoters(null)}>Close</button>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPoll;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AACtE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,aAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,eAAA;EACrB,MAAM;IAAEC,EAAE;IAAEC;EAAM,CAAC,GAAGhB,SAAS,CAAC,CAAC;EACjC,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEgB;EAAK,CAAC,GAAGd,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACyB,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC+B,UAAU,EAAEC,aAAa,CAAC,GAAGhC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACuC,cAAc,EAAEC,iBAAiB,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACyC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1C,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC2C,YAAY,EAAEC,eAAe,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAElD+C,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;EAC3DD,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE5B,IAAI,CAAC;EACzC2B,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE3B,IAAI,CAAC,CAAC,CAAC;EACnC,IAAID,IAAI,IAAIC,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAE4B,OAAO,EAAE;IACzBF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE5B,IAAI,CAACH,EAAE,CAAC;IACjC8B,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE3B,IAAI,CAAC4B,OAAO,CAACC,GAAG,CAAC;IAClDH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,MAAM,CAAC/B,IAAI,CAACH,EAAE,CAAC,CAAC;IACjD8B,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEG,MAAM,CAAC9B,IAAI,CAAC4B,OAAO,CAACC,GAAG,CAAC,CAAC;IAClEH,OAAO,CAACC,GAAG,CAAC,oEAAoE,EAAEG,MAAM,CAAC/B,IAAI,CAAC8B,GAAG,CAAC,KAAKC,MAAM,CAAC9B,IAAI,CAAC4B,OAAO,CAACC,GAAG,CAAC,CAAC;EAClI,CAAC,MAAM;IACLH,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;EAClE;EACAD,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;EAGhC/C,SAAS,CAAC,MAAM;IACdmD,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACnC,EAAE,EAAEC,KAAK,CAAC,CAAC;EAEf,MAAMkC,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpC,IAAI;MACF7B,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI8B,QAAQ;MACZ,IAAIpC,KAAK,EAAE;QACToC,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAAC,qBAAqBrC,KAAK,SAAS,EAAE;UAC/DmC;QACF,CAAC,CAAC;MACJ,CAAC,MAAM;QACLC,QAAQ,GAAG,MAAMjD,KAAK,CAACmD,GAAG,CAAC,cAAcvC,EAAE,EAAE,CAAC;MAChD;MACAK,OAAO,CAACgC,QAAQ,CAACG,IAAI,CAACpC,IAAI,CAAC;MAC3BO,WAAW,CAAC0B,QAAQ,CAACG,IAAI,CAAC9B,QAAQ,IAAI,KAAK,CAAC;;MAE5C;MACA,MAAM+B,cAAc,GAAG,CAAC,CAAC;MACzBJ,QAAQ,CAACG,IAAI,CAACpC,IAAI,CAACsC,SAAS,CAACC,OAAO,CAAEC,QAAQ,IAAK;QACjDH,cAAc,CAACG,QAAQ,CAACX,GAAG,CAAC,GAAG,IAAI;MACrC,CAAC,CAAC;MACFpB,UAAU,CAAC4B,cAAc,CAAC;MAC1BhB,oBAAoB,CAAC,KAAK,CAAC;MAC3BF,iBAAiB,CAAC,EAAE,CAAC;IACvB,CAAC,CAAC,OAAOf,KAAK,EAAE;MAAA,IAAAqC,eAAA,EAAAC,gBAAA;MACd,IAAI,EAAAD,eAAA,GAAArC,KAAK,CAAC6B,QAAQ,cAAAQ,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,IAAI,EAAAD,gBAAA,GAAAtC,KAAK,CAAC6B,QAAQ,cAAAS,gBAAA,uBAAdA,gBAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;QACpEtB,oBAAoB,CAAC,IAAI,CAAC;QAC1BF,iBAAiB,CAAC,oDAAoD,CAAC;MACzE,CAAC,MAAM;QAAA,IAAAyB,gBAAA,EAAAC,qBAAA;QACLxC,QAAQ,CAAC,EAAAuC,gBAAA,GAAAxC,KAAK,CAAC6B,QAAQ,cAAAW,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBR,IAAI,cAAAS,qBAAA,uBAApBA,qBAAA,CAAsBC,OAAO,KAAI,qBAAqB,CAAC;MAClE;IACF,CAAC,SAAS;MACR3C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4C,oBAAoB,GAAG,MAAOC,CAAC,IAAK;IACxCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB5C,QAAQ,CAAC,EAAE,CAAC;IACZ,MAAM0B,SAAS,CAACT,YAAY,CAAC;EAC/B,CAAC;;EAED;EACA,MAAM4B,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,MAAM,EAAEC,WAAW,GAAG,KAAK,KAAK;IACtE5C,UAAU,CAAE6C,IAAI,KAAM;MACpB,GAAGA,IAAI;MACP,CAACH,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;;IAEH;IACAnC,kBAAkB,CAAEqC,IAAI,IAAK;MAC3B,MAAMC,UAAU,GAAG;QAAE,GAAGD;MAAK,CAAC;MAC9B,IAAIC,UAAU,CAACJ,UAAU,CAAC,EAAE;QAC1BK,MAAM,CAACC,IAAI,CAACF,UAAU,CAACJ,UAAU,CAAC,CAAC,CAACZ,OAAO,CAAEmB,MAAM,IAAK;UACtD,IAAIC,QAAQ,CAACD,MAAM,CAAC,KAAKN,MAAM,EAAE;YAC/B,OAAOG,UAAU,CAACJ,UAAU,CAAC,CAACO,MAAM,CAAC;UACvC;QACF,CAAC,CAAC;MACJ;MACA,OAAOH,UAAU;IACnB,CAAC,CAAC;;IAEF;IACA1C,mBAAmB,CAAEyC,IAAI,KAAM;MAC7B,GAAGA,IAAI;MACP,CAACH,UAAU,GAAGE;IAChB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMO,0BAA0B,GAAGA,CAACT,UAAU,EAAEU,WAAW,EAAET,MAAM,KAAK;IACtEnC,kBAAkB,CAAEqC,IAAI,KAAM;MAC5B,GAAGA,IAAI;MACP,CAACH,UAAU,GAAG;QACZ,GAAGG,IAAI,CAACH,UAAU,CAAC;QACnB,CAACU,WAAW,GAAGT;MACjB;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMU,gBAAgB,GAAG,MAAOd,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACFtC,aAAa,CAAC,IAAI,CAAC;MACnBN,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACA,MAAM0D,qBAAqB,GAAG/D,IAAI,CAACsC,SAAS,CAAC0B,IAAI,CAAExB,QAAQ,IAAK;QAC9D,MAAMY,MAAM,GAAG5C,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC;QACpC,IAAI,CAACW,QAAQ,CAACyB,QAAQ,EAAE,OAAO,KAAK;;QAEpC;QACA,IAAIzB,QAAQ,CAAC0B,IAAI,KAAK,eAAe,EAAE;UACrC,OAAOd,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKe,SAAS;QAChD;QACA;QACA,IAAI3B,QAAQ,CAAC0B,IAAI,KAAK,iBAAiB,EAAE;UACvC,OAAO,CAACE,KAAK,CAACC,OAAO,CAACjB,MAAM,CAAC,IAAIA,MAAM,CAACkB,MAAM,KAAK,CAAC;QACtD;QACA,OAAO,KAAK;MACd,CAAC,CAAC;MAEF,IAAIP,qBAAqB,EAAE;QACzB1D,QAAQ,CAAC,sCAAsC,CAAC;QAChDM,aAAa,CAAC,KAAK,CAAC;QACpB;MACF;;MAEA;MACA,MAAM4D,sBAAsB,GAAGvE,IAAI,CAACsC,SAAS,CAAC0B,IAAI,CAAExB,QAAQ,IAAK;QAC/D,MAAMY,MAAM,GAAG5C,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC;QACpC,IAAIuB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKe,SAAS,EAAE,OAAO,KAAK;QACzD;QACA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACjB,MAAM,CAAC,EAAE;UAC1B,MAAMoB,MAAM,GAAGhC,QAAQ,CAACiC,OAAO,CAACrB,MAAM,CAAC;UACvC,IAAIoB,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEE,QAAQ,EAAE;YACpB;YACA,MAAMC,cAAc,GAClB3D,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,IAC7Bb,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,CAACuB,MAAM,CAAC;YACvC,OAAOuB,cAAc,KAAKR,SAAS,IAAIQ,cAAc,KAAK,IAAI;UAChE;QACF,CAAC,MAAM;UACL;UACA,OAAOvB,MAAM,CAACY,IAAI,CAAEH,WAAW,IAAK;YAClC,MAAMW,MAAM,GAAGhC,QAAQ,CAACiC,OAAO,CAACZ,WAAW,CAAC;YAC5C,IAAIW,MAAM,aAANA,MAAM,eAANA,MAAM,CAAEE,QAAQ,EAAE;cACpB,MAAMC,cAAc,GAClB3D,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,IAC7Bb,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,CAACgC,WAAW,CAAC;cAC5C,OAAOc,cAAc,KAAKR,SAAS,IAAIQ,cAAc,KAAK,IAAI;YAChE;YACA,OAAO,KAAK;UACd,CAAC,CAAC;QACJ;QACA,OAAO,KAAK;MACd,CAAC,CAAC;MAEF,IAAIJ,sBAAsB,EAAE;QAC1BlE,QAAQ,CAAC,uCAAuC,CAAC;QACjDM,aAAa,CAAC,KAAK,CAAC;QACpB;MACF;;MAEA;MACA,MAAMiE,kBAAkB,GAAG5E,IAAI,CAACsC,SAAS,CACtCuC,GAAG,CAAErC,QAAQ,IAAK;QACjB,MAAMY,MAAM,GAAG5C,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC;QACpC,IAAIuB,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKe,SAAS,EAAE,OAAO,IAAI;QAExD,MAAMW,iBAAiB,GAAG;UACxB3B,UAAU,EAAEX,QAAQ,CAACX,GAAG;UACxBuB,MAAM,EAAEA,MAAM;UACdpC,eAAe,EAAE;QACnB,CAAC;;QAED;QACA,IAAIoD,KAAK,CAACC,OAAO,CAACjB,MAAM,CAAC,EAAE;UACzB;UACAA,MAAM,CAACb,OAAO,CAAEsB,WAAW,IAAK;YAAA,IAAAkB,qBAAA;YAC9B,IAAI,EAAAA,qBAAA,GAAA/D,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,cAAAkD,qBAAA,uBAA7BA,qBAAA,CAAgClB,WAAW,CAAC,MAAKM,SAAS,EAAE;cAC9DW,iBAAiB,CAAC9D,eAAe,CAACgE,IAAI,CAAC;gBACrCnB,WAAW;gBACXT,MAAM,EAAEpC,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,CAACgC,WAAW;cACnD,CAAC,CAAC;YACJ;UACF,CAAC,CAAC;QACJ,CAAC,MAAM;UAAA,IAAAoB,sBAAA;UACL;UACA,IAAI,EAAAA,sBAAA,GAAAjE,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,cAAAoD,sBAAA,uBAA7BA,sBAAA,CAAgC7B,MAAM,CAAC,MAAKe,SAAS,EAAE;YACzDW,iBAAiB,CAAC9D,eAAe,CAACgE,IAAI,CAAC;cACrCnB,WAAW,EAAET,MAAM;cACnBA,MAAM,EAAEpC,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,CAACuB,MAAM;YAC9C,CAAC,CAAC;UACJ;QACF;QAEA,OAAO0B,iBAAiB;MAC1B,CAAC,CAAC,CACDI,MAAM,CAACC,OAAO,CAAC;MAElB,MAAMlD,QAAQ,GAAG,MAAMjD,KAAK,CAACkD,IAAI,CAAC,cAAclC,IAAI,CAAC6B,GAAG,OAAO,EAAE;QAC/DrB,OAAO,EAAEoE;MACX,CAAC,CAAC;MAEFrE,WAAW,CAAC,IAAI,CAAC;MACjB;MACAwB,SAAS,CAAC,CAAC;MACXhB,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOX,KAAK,EAAE;MAAA,IAAAgF,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;MACd5D,OAAO,CAACtB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;;MAE9C;MACA,IAAI,EAAAgF,gBAAA,GAAAhF,KAAK,CAAC6B,QAAQ,cAAAmD,gBAAA,uBAAdA,gBAAA,CAAgBzC,MAAM,MAAK,GAAG,IAAI,EAAA0C,gBAAA,GAAAjF,KAAK,CAAC6B,QAAQ,cAAAoD,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBjD,IAAI,cAAAkD,qBAAA,uBAApBA,qBAAA,CAAsBxC,OAAO,MAAK,qCAAqC,EAAE;QAC7G;QACAvC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;QACnB;QACA;MACF,CAAC,MAAM;QAAA,IAAAgF,gBAAA,EAAAC,qBAAA;QACL;QACAnF,QAAQ,CACN,EAAAkF,gBAAA,GAAAnF,KAAK,CAAC6B,QAAQ,cAAAsD,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBnD,IAAI,cAAAoD,qBAAA,uBAApBA,qBAAA,CAAsB1C,OAAO,KAC3B,0CACJ,CAAC;MACH;IACF,CAAC,SAAS;MACRnC,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAM8E,mBAAmB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC5C,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,CAAC;IACzB,OAAOC,IAAI,CAACC,KAAK,CAAEH,KAAK,GAAGC,KAAK,GAAI,GAAG,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMG,oBAAoB,GAAG9F,IAAI,IAAI,CAACA,IAAI,CAAC+F,QAAQ,IAAIjE,MAAM,CAAC/B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,EAAE,CAAC,KAAKkC,MAAM,EAAAtC,aAAA,GAACQ,IAAI,CAAC4B,OAAO,cAAApC,aAAA,uBAAZA,aAAA,CAAcqC,GAAG,CAAC,IAAI7B,IAAI,CAACgG,WAAW;EAEzH,IAAI9F,OAAO,EAAE;IACX,oBACEf,OAAA;MAAK8G,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B/G,OAAA;QAAK8G,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B/G,OAAA;UAAK8G,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC/G,OAAA;YAAK8G,SAAS,EAAC;UAAS;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC/BnH,OAAA;YAAA+G,QAAA,EAAG;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIlG,KAAK,EAAE;IACT,oBACEjB,OAAA;MAAK8G,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B/G,OAAA;QAAK8G,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3B/G,OAAA;UAAK8G,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChC/G,OAAA;YAAG8G,SAAS,EAAC;UAA2B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC5ClG,KAAK;QAAA;UAAA+F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIlF,iBAAiB,EAAE;IACrB,oBACEjC,OAAA;MAAK8G,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7B/G,OAAA;QAAK8G,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B/G,OAAA;UAAK8G,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClC/G,OAAA;YAAG8G,SAAS,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC9BpF,cAAc;QAAA;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACZ,CAAC,eACNnH,OAAA;UACEoH,QAAQ,EAAExD,oBAAqB;UAC/ByD,KAAK,EAAE;YAAEC,QAAQ,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAS,CAAE;UAAAR,QAAA,gBAE3C/G,OAAA;YACE+E,IAAI,EAAC,UAAU;YACf+B,SAAS,EAAC,YAAY;YACtBU,WAAW,EAAC,eAAe;YAC3BC,KAAK,EAAEtF,YAAa;YACpBuF,QAAQ,EAAG7D,CAAC,IAAKzB,eAAe,CAACyB,CAAC,CAAC8D,MAAM,CAACF,KAAK,CAAE;YACjD3C,QAAQ;YACRuC,KAAK,EAAE;cAAEO,YAAY,EAAE;YAAG;UAAE;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACFnH,OAAA;YAAQ+E,IAAI,EAAC,QAAQ;YAAC+B,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EAAC;UAE3D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEnH,OAAA;IAAK8G,SAAS,EAAC,gBAAgB;IAAAC,QAAA,eAC7B/G,OAAA;MAAK8G,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC1BJ,oBAAoB,iBACnB3G,OAAA;QAAK8G,SAAS,EAAC,kBAAkB;QAACO,KAAK,EAAE;UAAEO,YAAY,EAAE;QAAG,CAAE;QAAAb,QAAA,gBAC5D/G,OAAA;UAAG8G,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBACnB,EAAC,GAAG,eAChBnH,OAAA;UACE6H,IAAI,EAAE,GAAGC,MAAM,CAACnH,QAAQ,CAACoH,MAAM,gBAAgBlH,IAAI,CAACgG,WAAW,EAAG;UAClEc,MAAM,EAAC,QAAQ;UACfK,GAAG,EAAC,qBAAqB;UAAAjB,QAAA,GAExBe,MAAM,CAACnH,QAAQ,CAACoH,MAAM,EAAC,eAAa,EAAClH,IAAI,CAACgG,WAAW;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACN,eAEDnH,OAAA;QAAK8G,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/G,OAAA;UACEqH,KAAK,EAAE;YACLY,OAAO,EAAE,MAAM;YACfC,UAAU,EAAE,QAAQ;YACpBC,cAAc,EAAE,eAAe;YAC/BP,YAAY,EAAE;UAChB,CAAE;UAAAb,QAAA,gBAEF/G,OAAA;YAAA+G,QAAA,EAAKlG,IAAI,CAACuH;UAAK;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,EACpBtG,IAAI,CAACwH,QAAQ,iBACZrI,OAAA;YACEqH,KAAK,EAAE;cACLiB,OAAO,EAAE,UAAU;cACnBC,QAAQ,EAAE,EAAE;cACZC,eAAe,EACb3H,IAAI,CAACwH,QAAQ,KAAK,UAAU,GAAG,SAAS,GAAG,SAAS;cACtDI,KAAK,EAAE5H,IAAI,CAACwH,QAAQ,KAAK,UAAU,GAAG,SAAS,GAAG,SAAS;cAC3DK,YAAY,EAAE,CAAC;cACfC,aAAa,EAAE,WAAW;cAC1BC,UAAU,EAAE,GAAG;cACfC,aAAa,EAAE;YACjB,CAAE;YAAA9B,QAAA,EAEDlG,IAAI,CAACwH;UAAQ;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CACP;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,EACLtG,IAAI,CAACiI,WAAW,iBAAI9I,OAAA;UAAA+G,QAAA,EAAIlG,IAAI,CAACiI;QAAW;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE9CnH,OAAA;UAAK8G,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxB/G,OAAA;YAAK8G,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC3B/G,OAAA;cAAG8G,SAAS,EAAC;YAAa;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/BnH,OAAA;cAAA+G,QAAA,GAAM,aAAW,EAAC,EAAAzG,cAAA,GAAAO,IAAI,CAAC4B,OAAO,cAAAnC,cAAA,uBAAZA,cAAA,CAAcyI,IAAI,KAAI,WAAW;YAAA;cAAA/B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACNnH,OAAA;YAAK8G,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzB/G,OAAA;cAAA+G,QAAA,gBACE/G,OAAA;gBAAG8G,SAAS,EAAC;cAAkB;gBAAAE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,KAAC,EAACtG,IAAI,CAACmI,cAAc,EAAE,GAAG,EAAC,WAEjE;YAAA;cAAAhC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPnH,OAAA;cAAMqH,KAAK,EAAE;gBAAE4B,UAAU,EAAE;cAAO,CAAE;cAAAlC,QAAA,gBAClC/G,OAAA;gBACE8G,SAAS,EAAE,UACT,CAAAvG,cAAA,GAAAM,IAAI,CAACqI,QAAQ,cAAA3I,cAAA,eAAbA,cAAA,CAAe4I,eAAe,GAAG,KAAK,GAAG,WAAW;cACnD;gBAAAnC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,EACJ,CAAA3G,eAAA,GAAAK,IAAI,CAACqI,QAAQ,cAAA1I,eAAA,eAAbA,eAAA,CAAe2I,eAAe,GAC3B,iCAAiC,GACjC,kCAAkC;YAAA;cAAAnC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAEL,CAACvG,IAAI,gBACJZ,OAAA;QAAK8G,SAAS,EAAC,qBAAqB;QAACO,KAAK,EAAE;UAAEO,YAAY,EAAE;QAAG,CAAE;QAAAb,QAAA,gBAC/D/G,OAAA;UAAG8G,SAAS,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,+CAEjC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,GACJ,CAAChG,QAAQ,gBACXnB,OAAA;QAAMoH,QAAQ,EAAEzC,gBAAiB;QAACmC,SAAS,EAAC,WAAW;QAAAC,QAAA,GACpDlG,IAAI,CAACsC,SAAS,CAACuC,GAAG,CAAC,CAACrC,QAAQ,EAAE+F,KAAK;UAAA,IAAAC,qBAAA;UAAA,oBAClCrJ,OAAA;YAAwB8G,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACpD/G,OAAA;cAAA+G,QAAA,GAAI,WAAS,EAACqC,KAAK,GAAG,CAAC;YAAA;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAC7BnH,OAAA;cAAG8G,SAAS,EAAC,eAAe;cAAAC,QAAA,EAAE1D,QAAQ,CAACA;YAAQ;cAAA2D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAEpDnH,OAAA;cAAK8G,SAAS,EAAC,mBAAmB;cAAAC,QAAA,EAC/B1D,QAAQ,CAACiC,OAAO,CAACI,GAAG,CAAC,CAACL,MAAM,EAAEX,WAAW,kBACxC1E,OAAA;gBAAyB8G,SAAS,EAAC,cAAc;gBAAAC,QAAA,gBAC/C/G,OAAA;kBACE+E,IAAI,EAAC,OAAO;kBACZgE,IAAI,EAAE1F,QAAQ,CAACX,GAAI;kBACnB+E,KAAK,EAAE/C,WAAY;kBACnBgD,QAAQ,EAAG7D,CAAC,IACVE,kBAAkB,CAChBV,QAAQ,CAACX,GAAG,EACZ8B,QAAQ,CAACX,CAAC,CAAC8D,MAAM,CAACF,KAAK,CAAC,EACxBpC,MAAM,CAACE,QAAQ,KAAK,IACtB,CACD;kBACDT,QAAQ,EAAEzB,QAAQ,CAACyB;gBAAS;kBAAAkC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7B,CAAC,eACFnH,OAAA;kBAAM8G,SAAS,EAAC,aAAa;kBAAAC,QAAA,EAAE1B,MAAM,CAACiE;gBAAI;kBAAAtC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GAdxCzC,WAAW;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAehB,CACR;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,EAGL1F,gBAAgB,CAAC4B,QAAQ,CAACX,GAAG,CAAC,IAC7B,CAACuC,KAAK,CAACC,OAAO,CAAC7D,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC,CAAC,MAAA2G,qBAAA,GACrChG,QAAQ,CAACiC,OAAO,CAACjE,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC,CAAC,cAAA2G,qBAAA,uBAAvCA,qBAAA,CAAyC9D,QAAQ,kBAC/CvF,OAAA;cAAK8G,SAAS,EAAC,qBAAqB;cAAAC,QAAA,eAClC/G,OAAA;gBAAK8G,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,gBACjC/G,OAAA;kBAAG8G,SAAS,EAAC,eAAe;kBAAAC,QAAA,EAExB1D,QAAQ,CAACiC,OAAO,CAACjE,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC,CAAC,CAAC6C,QAAQ,CAC7ClC;gBAAQ;kBAAA2D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAEZ,CAAC,eACJnH,OAAA;kBAAK8G,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,EAC/B1D,QAAQ,CAACiC,OAAO,CACfjE,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC,CACtB,CAAC6C,QAAQ,CAACD,OAAO,CAACI,GAAG,CACpB,CAAC6D,cAAc,EAAEC,mBAAmB;oBAAA,IAAAC,sBAAA;oBAAA,oBAClCzJ,OAAA;sBAEE8G,SAAS,EAAC,cAAc;sBAAAC,QAAA,gBAExB/G,OAAA;wBACE+E,IAAI,EAAC,OAAO;wBACZgE,IAAI,EAAE,GAAG1F,QAAQ,CAACX,GAAG,WAAY;wBACjC+E,KAAK,EAAE+B,mBAAoB;wBAC3BE,OAAO,EACL,EAAAD,sBAAA,GAAA5H,eAAe,CAACwB,QAAQ,CAACX,GAAG,CAAC,cAAA+G,sBAAA,uBAA7BA,sBAAA,CACEpI,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC,CACtB,MAAK8G,mBACP;wBACD9B,QAAQ,EAAG7D,CAAC,IACVY,0BAA0B,CACxBpB,QAAQ,CAACX,GAAG,EACZrB,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC,EACrB8B,QAAQ,CAACX,CAAC,CAAC8D,MAAM,CAACF,KAAK,CACzB,CACD;wBACD3C,QAAQ,EACNzB,QAAQ,CAACiC,OAAO,CAACjE,OAAO,CAACgC,QAAQ,CAACX,GAAG,CAAC,CAAC,CACpC6C,QAAQ,CAACT;sBACb;wBAAAkC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACF,CAAC,eACFnH,OAAA;wBAAM8G,SAAS,EAAC,aAAa;wBAAAC,QAAA,EAC1BwC,cAAc,CAACD;sBAAI;wBAAAtC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAChB,CAAC;oBAAA,GA1BFqC,mBAAmB;sBAAAxC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OA2BnB,CAAC;kBAAA,CAEZ;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACN;UAAA,GA5EK9D,QAAQ,CAACX,GAAG;YAAAsE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OA6EjB,CAAC;QAAA,CACP,CAAC,eAEFnH,OAAA;UACE+E,IAAI,EAAC,QAAQ;UACb+B,SAAS,EAAC,iCAAiC;UAC3C6C,QAAQ,EAAEpI,UAAW;UAAAwF,QAAA,EAEpBxF,UAAU,gBACTvB,OAAA,CAAAE,SAAA;YAAA6G,QAAA,gBACE/G,OAAA;cAAK8G,SAAS,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,iBAEjC;UAAA,eAAE,CAAC,gBAEHnH,OAAA,CAAAE,SAAA;YAAA6G,QAAA,gBACE/G,OAAA;cAAG8G,SAAS,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAErC;UAAA,eAAE;QACH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,gBAEPnH,OAAA;QAAK8G,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B/G,OAAA;UAAK8G,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7B/G,OAAA;YAAA+G,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBnH,OAAA;YAAA+G,QAAA,EAAG;UAAmD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvD,CAAC,EAELtG,IAAI,CAACsC,SAAS,CAACuC,GAAG,CAAC,CAACrC,QAAQ,EAAE+F,KAAK,kBAClCpJ,OAAA;UAAwB8G,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAClD/G,OAAA;YAAA+G,QAAA,GAAI,WAAS,EAACqC,KAAK,GAAG,CAAC;UAAA;YAAApC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7BnH,OAAA;YAAG8G,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAE1D,QAAQ,CAACA;UAAQ;YAAA2D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEpDnH,OAAA;YAAK8G,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/B1D,QAAQ,CAACiC,OAAO,CAACI,GAAG,CAAC,CAACL,MAAM,EAAEX,WAAW,KAAK;cAAA,IAAAkF,eAAA,EAAAC,cAAA,EAAAC,eAAA,EAAAC,cAAA;cAC7C,MAAMC,UAAU,GAAG1D,mBAAmB,CACpCjB,MAAM,CAACkB,KAAK,EACZ1F,IAAI,CAACmI,cACP,CAAC;cACD,oBACEhJ,OAAA;gBAAuB8G,SAAS,EAAC,eAAe;gBAAAC,QAAA,gBAC9C/G,OAAA;kBAAK8G,SAAS,EAAC,eAAe;kBAAAC,QAAA,gBAC5B/G,OAAA;oBAAM8G,SAAS,EAAC,aAAa;oBAAAC,QAAA,EAAE1B,MAAM,CAACiE;kBAAI;oBAAAtC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eAClDnH,OAAA;oBAAM8G,SAAS,EAAC,mBAAmB;oBAAAC,QAAA,GAChCiD,UAAU,EAAC,GACd;kBAAA;oBAAAhD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNnH,OAAA;kBAAK8G,SAAS,EAAC,YAAY;kBAAAC,QAAA,eACzB/G,OAAA;oBACE8G,SAAS,EAAC,aAAa;oBACvBO,KAAK,EAAE;sBAAE4C,KAAK,EAAE,GAAGD,UAAU;oBAAI;kBAAE;oBAAAhD,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAC/B;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC,eACNnH,OAAA;kBACE8G,SAAS,EAAC,cAAc;kBACxBO,KAAK,EAAE;oBAAE6C,MAAM,EAAE,CAAAN,eAAA,GAAA/I,IAAI,CAACqI,QAAQ,cAAAU,eAAA,eAAbA,eAAA,CAAeT,eAAe,IAAIxG,MAAM,CAAC/B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,EAAE,CAAC,KAAKkC,MAAM,EAAAkH,cAAA,GAAChJ,IAAI,CAAC4B,OAAO,cAAAoH,cAAA,uBAAZA,cAAA,CAAcnH,GAAG,CAAC,IAAI2C,MAAM,CAACkB,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG;kBAAU,CAAE;kBAChJ4D,OAAO,EAAEA,CAAA,KAAM;oBAAA,IAAAC,eAAA,EAAAC,cAAA;oBACb,IAAI,CAAAD,eAAA,GAAAvJ,IAAI,CAACqI,QAAQ,cAAAkB,eAAA,eAAbA,eAAA,CAAejB,eAAe,IAAIxG,MAAM,CAAC/B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,EAAE,CAAC,KAAKkC,MAAM,EAAA0H,cAAA,GAACxJ,IAAI,CAAC4B,OAAO,cAAA4H,cAAA,uBAAZA,cAAA,CAAc3H,GAAG,CAAC,IAAI2C,MAAM,CAACkB,KAAK,GAAG,CAAC,EAAE;sBACxGjE,aAAa,CAAC;wBAAE0B,UAAU,EAAEX,QAAQ,CAACX,GAAG;wBAAEgC;sBAAY,CAAC,CAAC;oBAC1D;kBACF,CAAE;kBAAAqC,QAAA,GAED1B,MAAM,CAACkB,KAAK,EAAC,QAChB;gBAAA;kBAAAS,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,EAEL9E,UAAU,IAAIA,UAAU,CAAC2B,UAAU,KAAKX,QAAQ,CAACX,GAAG,IAAIL,UAAU,CAACqC,WAAW,KAAKA,WAAW,MAAAoF,eAAA,GAAIjJ,IAAI,CAACqI,QAAQ,cAAAY,eAAA,uBAAbA,eAAA,CAAeX,eAAe,KAAIxG,MAAM,CAAC/B,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEH,EAAE,CAAC,KAAKkC,MAAM,EAAAoH,cAAA,GAAClJ,IAAI,CAAC4B,OAAO,cAAAsH,cAAA,uBAAZA,cAAA,CAAcrH,GAAG,CAAC,iBACjL1C,OAAA;kBAAK8G,SAAS,EAAC,qBAAqB;kBAACqD,OAAO,EAAEA,CAAA,KAAM7H,aAAa,CAAC,IAAI,CAAE;kBAAAyE,QAAA,eACtE/G,OAAA;oBAAK8G,SAAS,EAAC,aAAa;oBAACqD,OAAO,EAAEtG,CAAC,IAAIA,CAAC,CAACyG,eAAe,CAAC,CAAE;oBAAAvD,QAAA,gBAC7D/G,OAAA;sBAAA+G,QAAA,GAAI,eAAY,EAAC1B,MAAM,CAACiE,IAAI,EAAC,IAAC;oBAAA;sBAAAtC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAI,CAAC,eACnCnH,OAAA;sBAAA+G,QAAA,EACG1B,MAAM,CAACkF,MAAM,IAAIlF,MAAM,CAACkF,MAAM,CAACpF,MAAM,GAAG,CAAC,GACxCE,MAAM,CAACkF,MAAM,CAAC7E,GAAG,CAAC,CAAC8E,CAAC,EAAEC,GAAG;wBAAA,IAAAC,OAAA,EAAAC,QAAA;wBAAA,oBACvB3K,OAAA;0BAAA+G,QAAA,gBACE/G,OAAA;4BAAG8G,SAAS,EAAC;0BAAa;4BAAAE,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAI,CAAC,KAAC,EAAC,EAAAwD,QAAA,GAAAH,CAAC,CAAC5J,IAAI,cAAA+J,QAAA,uBAANA,QAAA,CAAQ5B,IAAI,KAAI,WAAW;wBAAA,GADrD,EAAA2B,OAAA,GAAAF,CAAC,CAAC5J,IAAI,cAAA8J,OAAA,uBAANA,OAAA,CAAQhI,GAAG,KAAI+H,GAAG;0BAAAzD,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAEvB,CAAC;sBAAA,CACN,CAAC,gBAEFnH,OAAA;wBAAA+G,QAAA,EAAI;sBAAc;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI;oBACvB;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACC,CAAC,eACLnH,OAAA;sBAAQ8G,SAAS,EAAC,mBAAmB;sBAACqD,OAAO,EAAEA,CAAA,KAAM7H,aAAa,CAAC,IAAI,CAAE;sBAAAyE,QAAA,EAAC;oBAAK;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrF;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CACN;cAAA,GA3COzC,WAAW;gBAAAsC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA4ChB,CAAC;YAEV,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GA1DE9D,QAAQ,CAACX,GAAG;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2DjB,CACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/G,EAAA,CA/iBID,QAAQ;EAAA,QACUT,SAAS,EACdE,WAAW,EACXE,OAAO;AAAA;AAAA8K,EAAA,GAHpBzK,QAAQ;AAijBd,eAAeA,QAAQ;AAAC,IAAAyK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}