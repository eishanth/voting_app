{"ast":null,"code":"var _jsxFileName = \"D:\\\\voting\\\\voting_app\\\\frontend\\\\src\\\\pages\\\\ViewPoll.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewPoll = () => {\n  _s();\n  var _poll$creator;\n  const {\n    id,\n    token\n  } = useParams();\n  const location = useLocation();\n  const {\n    user\n  } = useAuth();\n  const [poll, setPoll] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [hasVoted, setHasVoted] = useState(false);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [visibleFollowUps, setVisibleFollowUps] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [followUpAnswers, setFollowUpAnswers] = useState({});\n  useEffect(() => {\n    fetchPoll();\n  }, [id, token]); // include token\n\n  const fetchPoll = async () => {\n    try {\n      setLoading(true);\n      let response;\n      if (token) {\n        response = await axios.get(`/api/polls/invite/${token}`);\n      } else {\n        response = await axios.get(`/api/polls/${id}`);\n      }\n      setPoll(response.data.poll);\n      setHasVoted(response.data.hasVoted || false);\n\n      // Initialize answers\n      const initialAnswers = {};\n      response.data.poll.questions.forEach(question => {\n        initialAnswers[question._id] = null;\n      });\n      setAnswers(initialAnswers);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to load poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerChange = (questionId, answer, hasFollowUp = false) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n\n    // If this answer has a follow-up question, show it\n    if (hasFollowUp) {\n      setVisibleFollowUps({\n        ...visibleFollowUps,\n        [questionId]: true\n      });\n    } else {\n      // If this answer doesn't have a follow-up, hide any existing follow-up\n      setVisibleFollowUps({\n        ...visibleFollowUps,\n        [questionId]: false\n      });\n      // Clear any existing follow-up answer\n      setFollowUpAnswers(prev => {\n        const newAnswers = {\n          ...prev\n        };\n        delete newAnswers[questionId];\n        return newAnswers;\n      });\n    }\n  };\n  const handleFollowUpAnswerChange = (questionId, optionIndex, answer) => {\n    setFollowUpAnswers(prev => ({\n      ...prev,\n      [questionId]: {\n        ...prev[questionId],\n        [optionIndex]: answer\n      }\n    }));\n  };\n  const handleSubmitVote = async e => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      setError(\"\");\n\n      // Validate answers\n      const hasUnansweredRequired = poll.questions.some(question => {\n        const answer = answers[question._id];\n        if (!question.required) return false;\n\n        // For single choice\n        if (question.type === \"single-choice\") {\n          return answer === null || answer === undefined;\n        }\n        // For multiple choice\n        if (question.type === \"multiple-choice\") {\n          return !Array.isArray(answer) || answer.length === 0;\n        }\n        return false;\n      });\n      if (hasUnansweredRequired) {\n        setError(\"Please answer all required questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // Validate follow-up questions only if the parent question was answered\n      const hasUnansweredFollowUps = poll.questions.some(question => {\n        const answer = answers[question._id];\n        if (!answer) return false;\n\n        // For single choice\n        if (!Array.isArray(answer)) {\n          const option = question.options[answer];\n          if (option !== null && option !== void 0 && option.followUp) {\n            var _followUpAnswers$ques;\n            const followUpAnswer = (_followUpAnswers$ques = followUpAnswers[question._id]) === null || _followUpAnswers$ques === void 0 ? void 0 : _followUpAnswers$ques[answer];\n            return followUpAnswer === undefined || followUpAnswer === null;\n          }\n        }\n        // For multiple choice\n        else {\n          return answer.some(optionIndex => {\n            var _followUpAnswers$ques2;\n            const option = question.options[optionIndex];\n            return (option === null || option === void 0 ? void 0 : option.followUp) && !((_followUpAnswers$ques2 = followUpAnswers[question._id]) !== null && _followUpAnswers$ques2 !== void 0 && _followUpAnswers$ques2[optionIndex]);\n          });\n        }\n        return false;\n      });\n      if (hasUnansweredFollowUps) {\n        setError(\"Please answer all follow-up questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // Transform answers to match backend expectations\n      const transformedAnswers = poll.questions.map(question => {\n        const answer = answers[question._id];\n        if (answer === null || answer === undefined) return null;\n        const transformedAnswer = {\n          questionId: question._id,\n          answer: answer,\n          followUpAnswers: []\n        };\n\n        // Handle follow-up answers\n        if (Array.isArray(answer)) {\n          // Multiple choice\n          answer.forEach(optionIndex => {\n            var _followUpAnswers$ques3;\n            if (((_followUpAnswers$ques3 = followUpAnswers[question._id]) === null || _followUpAnswers$ques3 === void 0 ? void 0 : _followUpAnswers$ques3[optionIndex]) !== undefined) {\n              transformedAnswer.followUpAnswers.push({\n                optionIndex,\n                answer: followUpAnswers[question._id][optionIndex]\n              });\n            }\n          });\n        } else {\n          var _followUpAnswers$ques4;\n          // Single choice\n          if (((_followUpAnswers$ques4 = followUpAnswers[question._id]) === null || _followUpAnswers$ques4 === void 0 ? void 0 : _followUpAnswers$ques4[answer]) !== undefined) {\n            transformedAnswer.followUpAnswers.push({\n              optionIndex: answer,\n              answer: followUpAnswers[question._id][answer]\n            });\n          }\n        }\n        return transformedAnswer;\n      }).filter(Boolean);\n      const response = await axios.post(`/api/polls/${poll._id}/vote`, {\n        answers: transformedAnswers\n      });\n      setHasVoted(true);\n      setPoll(response.data.poll);\n      setShowResults(true);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Error submitting vote:\", error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to submit vote. Please try again.\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const calculatePercentage = (votes, total) => {\n    if (total === 0) return 0;\n    return Math.round(votes / total * 100);\n  };\n\n  // Show invite link if private poll and ?showInvite=1 in query\n  const showInvite = poll && poll.isPublic === false && poll.inviteToken && new URLSearchParams(location.search).get(\"showInvite\") === \"1\";\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-poll-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-poll-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-poll-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: [showInvite && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this), \"Invite link:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${window.location.origin}/poll/invite/${poll.inviteToken}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [window.location.origin, \"/poll/invite/\", poll.inviteToken]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"space-between\",\n            marginBottom: \"8px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: poll.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), poll.pollType && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              padding: \"6px 12px\",\n              fontSize: 14,\n              backgroundColor: poll.pollType === \"business\" ? \"#e3f2fd\" : \"#f3e5f5\",\n              color: poll.pollType === \"business\" ? \"#1976d2\" : \"#7b1fa2\",\n              borderRadius: 8,\n              textTransform: \"uppercase\",\n              fontWeight: 600,\n              letterSpacing: \"0.5px\"\n            },\n            children: poll.pollType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), poll.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: poll.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-creator\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Created by \", ((_poll$creator = poll.creator) === null || _poll$creator === void 0 ? void 0 : _poll$creator.name) || \"Anonymous\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-stats\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-chart-bar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this), \" \", poll.totalResponses, \" \", \"responses\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), \"You must be signed in to vote in this poll.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this) : !hasVoted ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitVote,\n        className: \"poll-form\",\n        children: [poll.questions.map((question, index) => {\n          var _question$options$ans;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Question \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"question-text\",\n              children: question.question\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options-container\",\n              children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"option-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: question._id,\n                  value: optionIndex,\n                  onChange: e => handleAnswerChange(question._id, parseInt(e.target.value), option.followUp !== null),\n                  required: question.required\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"option-text\",\n                  children: option.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this), visibleFollowUps[question._id] && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"follow-up-container\",\n              children: ((_question$options$ans = question.options[answers[question._id]]) === null || _question$options$ans === void 0 ? void 0 : _question$options$ans.followUp) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"follow-up-question\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Follow-up Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"question-text\",\n                  children: question.options[answers[question._id]].followUp.question\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"options-container\",\n                  children: question.options[answers[question._id]].followUp.options.map((followUpOption, followUpOptionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"option-label\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: `${question._id}-followup`,\n                      value: followUpOptionIndex,\n                      onChange: e => handleFollowUpAnswerChange(`${question._id}-followup`, followUpOptionIndex, parseInt(e.target.value)),\n                      required: question.options[answers[question._id]].followUp.required\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"option-text\",\n                      children: followUpOption.text\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 349,\n                      columnNumber: 33\n                    }, this)]\n                  }, followUpOptionIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, question._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-lg btn-full\",\n          disabled: submitting,\n          children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this), \"Submitting...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-vote-yea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this), \"Submit Vote\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thank you for voting! Here are the current results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), poll.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question-text\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-container\",\n            children: question.options.map((option, optionIndex) => {\n              const percentage = calculatePercentage(option.votes, poll.totalResponses);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"option-text\",\n                    children: option.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"result-percentage\",\n                    children: [percentage, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-fill\",\n                    style: {\n                      width: `${percentage}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-votes\",\n                  children: [option.votes, \" votes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 25\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewPoll, \"4/1fN3XGVAWgGkVpqnYIcIBkkgQ=\", false, function () {\n  return [useParams, useLocation, useAuth];\n});\n_c = ViewPoll;\nexport default ViewPoll;\nvar _c;\n$RefreshReg$(_c, \"ViewPoll\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","axios","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewPoll","_s","_poll$creator","id","token","location","user","poll","setPoll","loading","setLoading","error","setError","hasVoted","setHasVoted","answers","setAnswers","submitting","setSubmitting","visibleFollowUps","setVisibleFollowUps","showResults","setShowResults","followUpAnswers","setFollowUpAnswers","fetchPoll","response","get","data","initialAnswers","questions","forEach","question","_id","_error$response","_error$response$data","message","handleAnswerChange","questionId","answer","hasFollowUp","prev","newAnswers","handleFollowUpAnswerChange","optionIndex","handleSubmitVote","e","preventDefault","hasUnansweredRequired","some","required","type","undefined","Array","isArray","length","hasUnansweredFollowUps","option","options","followUp","_followUpAnswers$ques","followUpAnswer","_followUpAnswers$ques2","transformedAnswers","map","transformedAnswer","_followUpAnswers$ques3","push","_followUpAnswers$ques4","filter","Boolean","post","_error$response2","_error$response2$data","console","calculatePercentage","votes","total","Math","round","showInvite","isPublic","inviteToken","URLSearchParams","search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","href","window","origin","target","rel","display","alignItems","justifyContent","title","pollType","padding","fontSize","backgroundColor","color","borderRadius","textTransform","fontWeight","letterSpacing","description","creator","name","totalResponses","onSubmit","index","_question$options$ans","value","onChange","parseInt","text","followUpOption","followUpOptionIndex","disabled","percentage","width","_c","$RefreshReg$"],"sources":["D:/voting/voting_app/frontend/src/pages/ViewPoll.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../contexts/AuthContext\";\n\nconst ViewPoll = () => {\n  const { id, token } = useParams();\n  const location = useLocation();\n  const { user } = useAuth();\n  const [poll, setPoll] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [hasVoted, setHasVoted] = useState(false);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [visibleFollowUps, setVisibleFollowUps] = useState({});\n  const [showResults, setShowResults] = useState(false);\n  const [followUpAnswers, setFollowUpAnswers] = useState({});\n\n  useEffect(() => {\n    fetchPoll();\n  }, [id, token]); // include token\n\n  const fetchPoll = async () => {\n    try {\n      setLoading(true);\n      let response;\n      if (token) {\n        response = await axios.get(`/api/polls/invite/${token}`);\n      } else {\n        response = await axios.get(`/api/polls/${id}`);\n      }\n      setPoll(response.data.poll);\n      setHasVoted(response.data.hasVoted || false);\n\n      // Initialize answers\n      const initialAnswers = {};\n      response.data.poll.questions.forEach((question) => {\n        initialAnswers[question._id] = null;\n      });\n      setAnswers(initialAnswers);\n    } catch (error) {\n      setError(error.response?.data?.message || \"Failed to load poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerChange = (questionId, answer, hasFollowUp = false) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer,\n    });\n\n    // If this answer has a follow-up question, show it\n    if (hasFollowUp) {\n      setVisibleFollowUps({\n        ...visibleFollowUps,\n        [questionId]: true,\n      });\n    } else {\n      // If this answer doesn't have a follow-up, hide any existing follow-up\n      setVisibleFollowUps({\n        ...visibleFollowUps,\n        [questionId]: false,\n      });\n      // Clear any existing follow-up answer\n      setFollowUpAnswers(prev => {\n        const newAnswers = { ...prev };\n        delete newAnswers[questionId];\n        return newAnswers;\n      });\n    }\n  };\n\n  const handleFollowUpAnswerChange = (questionId, optionIndex, answer) => {\n    setFollowUpAnswers(prev => ({\n      ...prev,\n      [questionId]: {\n        ...prev[questionId],\n        [optionIndex]: answer\n      }\n    }));\n  };\n\n  const handleSubmitVote = async (e) => {\n    e.preventDefault();\n    try {\n      setSubmitting(true);\n      setError(\"\");\n\n      // Validate answers\n      const hasUnansweredRequired = poll.questions.some((question) => {\n        const answer = answers[question._id];\n        if (!question.required) return false;\n        \n        // For single choice\n        if (question.type === \"single-choice\") {\n          return answer === null || answer === undefined;\n        }\n        // For multiple choice\n        if (question.type === \"multiple-choice\") {\n          return !Array.isArray(answer) || answer.length === 0;\n        }\n        return false;\n      });\n\n      if (hasUnansweredRequired) {\n        setError(\"Please answer all required questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // Validate follow-up questions only if the parent question was answered\n      const hasUnansweredFollowUps = poll.questions.some((question) => {\n        const answer = answers[question._id];\n        if (!answer) return false;\n\n        // For single choice\n        if (!Array.isArray(answer)) {\n          const option = question.options[answer];\n          if (option?.followUp) {\n            const followUpAnswer = followUpAnswers[question._id]?.[answer];\n            return followUpAnswer === undefined || followUpAnswer === null;\n          }\n        }\n        // For multiple choice\n        else {\n          return answer.some(optionIndex => {\n            const option = question.options[optionIndex];\n            return option?.followUp && !followUpAnswers[question._id]?.[optionIndex];\n          });\n        }\n        return false;\n      });\n\n      if (hasUnansweredFollowUps) {\n        setError(\"Please answer all follow-up questions\");\n        setSubmitting(false);\n        return;\n      }\n\n      // Transform answers to match backend expectations\n      const transformedAnswers = poll.questions.map((question) => {\n        const answer = answers[question._id];\n        if (answer === null || answer === undefined) return null;\n\n        const transformedAnswer = {\n          questionId: question._id,\n          answer: answer,\n          followUpAnswers: []\n        };\n\n        // Handle follow-up answers\n        if (Array.isArray(answer)) {\n          // Multiple choice\n          answer.forEach(optionIndex => {\n            if (followUpAnswers[question._id]?.[optionIndex] !== undefined) {\n              transformedAnswer.followUpAnswers.push({\n                optionIndex,\n                answer: followUpAnswers[question._id][optionIndex]\n              });\n            }\n          });\n        } else {\n          // Single choice\n          if (followUpAnswers[question._id]?.[answer] !== undefined) {\n            transformedAnswer.followUpAnswers.push({\n              optionIndex: answer,\n              answer: followUpAnswers[question._id][answer]\n            });\n          }\n        }\n\n        return transformedAnswer;\n      }).filter(Boolean);\n\n      const response = await axios.post(`/api/polls/${poll._id}/vote`, {\n        answers: transformedAnswers,\n      });\n\n      setHasVoted(true);\n      setPoll(response.data.poll);\n      setShowResults(true);\n    } catch (error) {\n      console.error(\"Error submitting vote:\", error);\n      setError(\n        error.response?.data?.message ||\n          \"Failed to submit vote. Please try again.\"\n      );\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const calculatePercentage = (votes, total) => {\n    if (total === 0) return 0;\n    return Math.round((votes / total) * 100);\n  };\n\n  // Show invite link if private poll and ?showInvite=1 in query\n  const showInvite =\n    poll &&\n    poll.isPublic === false &&\n    poll.inviteToken &&\n    new URLSearchParams(location.search).get(\"showInvite\") === \"1\";\n\n  if (loading) {\n    return (\n      <div className=\"view-poll-page\">\n        <div className=\"container-sm\">\n          <div className=\"loading-container\">\n            <div className=\"spinner\"></div>\n            <p>Loading poll...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"view-poll-page\">\n        <div className=\"container-sm\">\n          <div className=\"alert alert-error\">\n            <i className=\"fas fa-exclamation-circle\"></i>\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"view-poll-page\">\n      <div className=\"container-sm\">\n        {showInvite && (\n          <div className=\"alert alert-info\" style={{ marginBottom: 16 }}>\n            <i className=\"fas fa-link\"></i>\n            Invite link:{\" \"}\n            <a\n              href={`${window.location.origin}/poll/invite/${poll.inviteToken}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {window.location.origin}/poll/invite/{poll.inviteToken}\n            </a>\n          </div>\n        )}\n\n        <div className=\"poll-header\">\n          <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\", marginBottom: \"8px\" }}>\n            <h1>{poll.title}</h1>\n            {poll.pollType && (\n              <span\n                style={{\n                  padding: \"6px 12px\",\n                  fontSize: 14,\n                  backgroundColor: poll.pollType === \"business\" ? \"#e3f2fd\" : \"#f3e5f5\",\n                  color: poll.pollType === \"business\" ? \"#1976d2\" : \"#7b1fa2\",\n                  borderRadius: 8,\n                  textTransform: \"uppercase\",\n                  fontWeight: 600,\n                  letterSpacing: \"0.5px\",\n                }}\n              >\n                {poll.pollType}\n              </span>\n            )}\n          </div>\n          {poll.description && <p>{poll.description}</p>}\n\n          <div className=\"poll-meta\">\n            <div className=\"poll-creator\">\n              <i className=\"fas fa-user\"></i>\n              <span>Created by {poll.creator?.name || \"Anonymous\"}</span>\n            </div>\n            <div className=\"poll-stats\">\n              <span>\n                <i className=\"fas fa-chart-bar\"></i> {poll.totalResponses}{\" \"}\n                responses\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {!user ? (\n          <div className=\"alert alert-warning\" style={{ marginBottom: 16 }}>\n            <i className=\"fas fa-lock\"></i>\n            You must be signed in to vote in this poll.\n          </div>\n        ) : !hasVoted ? (\n          <form onSubmit={handleSubmitVote} className=\"poll-form\">\n            {poll.questions.map((question, index) => (\n              <div key={question._id} className=\"question-container\">\n                <h3>Question {index + 1}</h3>\n                <p className=\"question-text\">{question.question}</p>\n\n                <div className=\"options-container\">\n                  {question.options.map((option, optionIndex) => (\n                    <label key={optionIndex} className=\"option-label\">\n                      <input\n                        type=\"radio\"\n                        name={question._id}\n                        value={optionIndex}\n                        onChange={(e) =>\n                          handleAnswerChange(\n                            question._id,\n                            parseInt(e.target.value),\n                            option.followUp !== null\n                          )\n                        }\n                        required={question.required}\n                      />\n                      <span className=\"option-text\">{option.text}</span>\n                    </label>\n                  ))}\n                </div>\n\n                {/* Render follow-up question if visible */}\n                {visibleFollowUps[question._id] && (\n                  <div className=\"follow-up-container\">\n                    {question.options[answers[question._id]]?.followUp && (\n                      <div className=\"follow-up-question\">\n                        <h4>Follow-up Question</h4>\n                        <p className=\"question-text\">\n                          {question.options[answers[question._id]].followUp.question}\n                        </p>\n                        <div className=\"options-container\">\n                          {question.options[answers[question._id]].followUp.options.map(\n                            (followUpOption, followUpOptionIndex) => (\n                              <label\n                                key={followUpOptionIndex}\n                                className=\"option-label\"\n                              >\n                                <input\n                                  type=\"radio\"\n                                  name={`${question._id}-followup`}\n                                  value={followUpOptionIndex}\n                                  onChange={(e) =>\n                                    handleFollowUpAnswerChange(\n                                      `${question._id}-followup`,\n                                      followUpOptionIndex,\n                                      parseInt(e.target.value)\n                                    )\n                                  }\n                                  required={question.options[answers[question._id]].followUp.required}\n                                />\n                                <span className=\"option-text\">\n                                  {followUpOption.text}\n                                </span>\n                              </label>\n                            )\n                          )}\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            ))}\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary btn-lg btn-full\"\n              disabled={submitting}\n            >\n              {submitting ? (\n                <>\n                  <div className=\"spinner\"></div>\n                  Submitting...\n                </>\n              ) : (\n                <>\n                  <i className=\"fas fa-vote-yea\"></i>\n                  Submit Vote\n                </>\n              )}\n            </button>\n          </form>\n        ) : (\n          <div className=\"poll-results\">\n            <div className=\"results-header\">\n              <h2>Results</h2>\n              <p>Thank you for voting! Here are the current results:</p>\n            </div>\n\n            {poll.questions.map((question, index) => (\n              <div key={question._id} className=\"question-results\">\n                <h3>Question {index + 1}</h3>\n                <p className=\"question-text\">{question.question}</p>\n\n                <div className=\"results-container\">\n                  {question.options.map((option, optionIndex) => {\n                    const percentage = calculatePercentage(\n                      option.votes,\n                      poll.totalResponses\n                    );\n                    return (\n                      <div key={optionIndex} className=\"result-option\">\n                        <div className=\"result-header\">\n                          <span className=\"option-text\">{option.text}</span>\n                          <span className=\"result-percentage\">\n                            {percentage}%\n                          </span>\n                        </div>\n                        <div className=\"result-bar\">\n                          <div\n                            className=\"result-fill\"\n                            style={{ width: `${percentage}%` }}\n                          ></div>\n                        </div>\n                        <div className=\"result-votes\">{option.votes} votes</div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPoll;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}