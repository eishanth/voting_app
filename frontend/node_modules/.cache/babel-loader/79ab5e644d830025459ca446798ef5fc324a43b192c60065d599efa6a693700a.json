{"ast":null,"code":"var _jsxFileName = \"D:\\\\voting\\\\voting_app\\\\frontend\\\\src\\\\pages\\\\ViewPoll.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ViewPoll = () => {\n  _s();\n  var _poll$creator;\n  const {\n    id,\n    token\n  } = useParams();\n  const location = useLocation();\n  const [poll, setPoll] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [hasVoted, setHasVoted] = useState(false);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [user, setUser] = useState(null); // Assuming you have a way to get the signed-in user\n\n  useEffect(() => {\n    fetchPoll();\n  }, [id, token]); // include token\n\n  const fetchPoll = async () => {\n    try {\n      setLoading(true);\n      let response;\n      if (token) {\n        response = await axios.get(`/api/polls/invite/${token}`);\n      } else {\n        response = await axios.get(`/api/polls/${id}`);\n      }\n      setPoll(response.data.poll);\n      setHasVoted(response.data.hasVoted || false);\n\n      // Initialize answers\n      const initialAnswers = {};\n      response.data.poll.questions.forEach(question => {\n        initialAnswers[question._id] = null;\n      });\n      setAnswers(initialAnswers);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Failed to load poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setSubmitting(true);\n    try {\n      const formattedAnswers = Object.entries(answers).map(([questionId, answer]) => ({\n        questionId,\n        answer\n      }));\n      await axios.post(`/api/polls/${id}/vote`, {\n        answers: formattedAnswers\n      });\n      setHasVoted(true);\n      fetchPoll(); // Refresh to get updated results\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to submit vote\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n  const calculatePercentage = (votes, total) => {\n    if (total === 0) return 0;\n    return Math.round(votes / total * 100);\n  };\n\n  // Show invite link if private poll and ?showInvite=1 in query\n  const showInvite = poll && poll.isPublic === false && poll.inviteToken && new URLSearchParams(location.search).get(\"showInvite\") === \"1\";\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-poll-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Loading poll...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-poll-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-error\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-exclamation-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-poll-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-sm\",\n      children: [showInvite && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-info\",\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), \"Invite link:\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: `${window.location.origin}/poll/invite/${poll.inviteToken}`,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [window.location.origin, \"/poll/invite/\", poll.inviteToken]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: poll.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), poll.description && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: poll.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"poll-meta\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-creator\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Created by \", ((_poll$creator = poll.creator) === null || _poll$creator === void 0 ? void 0 : _poll$creator.name) || \"Anonymous\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poll-stats\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-chart-bar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this), \" \", poll.totalResponses, \" \", \"responses\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), !user && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        style: {\n          marginBottom: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-lock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), \"You must be signed in to vote in this poll.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), user && !hasVoted ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"poll-form\",\n        children: [poll.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question-text\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options-container\",\n            children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"option-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: question._id,\n                value: optionIndex,\n                onChange: e => handleAnswerChange(question._id, parseInt(e.target.value)),\n                required: question.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"option-text\",\n                children: option.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 23\n              }, this)]\n            }, optionIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary btn-lg btn-full\",\n          disabled: submitting,\n          children: submitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), \"Submitting...\"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-vote-yea\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this), \"Submit Vote\"]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this) : !user ? null : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"poll-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Thank you for voting! Here are the current results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 13\n        }, this), poll.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question \", index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"question-text\",\n            children: question.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-container\",\n            children: question.options.map((option, optionIndex) => {\n              const percentage = calculatePercentage(option.votes, poll.totalResponses);\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"option-text\",\n                    children: option.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"result-percentage\",\n                    children: [percentage, \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-fill\",\n                    style: {\n                      width: `${percentage}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-votes\",\n                  children: [option.votes, \" votes\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 25\n                }, this)]\n              }, optionIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, question._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(ViewPoll, \"7QiXLhNQ7ki0J3h6GlFmvIcRn/U=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = ViewPoll;\nexport default ViewPoll;\nvar _c;\n$RefreshReg$(_c, \"ViewPoll\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewPoll","_s","_poll$creator","id","token","location","poll","setPoll","loading","setLoading","error","setError","hasVoted","setHasVoted","answers","setAnswers","submitting","setSubmitting","user","setUser","fetchPoll","response","get","data","initialAnswers","questions","forEach","question","_id","_error$response","_error$response$data","message","handleAnswerChange","questionId","answer","handleSubmit","e","preventDefault","formattedAnswers","Object","entries","map","post","_error$response2","_error$response2$data","calculatePercentage","votes","total","Math","round","showInvite","isPublic","inviteToken","URLSearchParams","search","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","href","window","origin","target","rel","title","description","creator","name","totalResponses","onSubmit","index","options","option","optionIndex","type","value","onChange","parseInt","required","text","disabled","percentage","width","_c","$RefreshReg$"],"sources":["D:/voting/voting_app/frontend/src/pages/ViewPoll.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst ViewPoll = () => {\n  const { id, token } = useParams();\n  const location = useLocation();\n  const [poll, setPoll] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [hasVoted, setHasVoted] = useState(false);\n  const [answers, setAnswers] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const [user, setUser] = useState(null); // Assuming you have a way to get the signed-in user\n\n  useEffect(() => {\n    fetchPoll();\n  }, [id, token]); // include token\n\n  const fetchPoll = async () => {\n    try {\n      setLoading(true);\n      let response;\n      if (token) {\n        response = await axios.get(`/api/polls/invite/${token}`);\n      } else {\n        response = await axios.get(`/api/polls/${id}`);\n      }\n      setPoll(response.data.poll);\n      setHasVoted(response.data.hasVoted || false);\n\n      // Initialize answers\n      const initialAnswers = {};\n      response.data.poll.questions.forEach((question) => {\n        initialAnswers[question._id] = null;\n      });\n      setAnswers(initialAnswers);\n    } catch (error) {\n      setError(error.response?.data?.message || \"Failed to load poll\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerChange = (questionId, answer) => {\n    setAnswers({\n      ...answers,\n      [questionId]: answer,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setSubmitting(true);\n\n    try {\n      const formattedAnswers = Object.entries(answers).map(\n        ([questionId, answer]) => ({\n          questionId,\n          answer,\n        })\n      );\n\n      await axios.post(`/api/polls/${id}/vote`, { answers: formattedAnswers });\n      setHasVoted(true);\n      fetchPoll(); // Refresh to get updated results\n    } catch (error) {\n      setError(error.response?.data?.message || \"Failed to submit vote\");\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const calculatePercentage = (votes, total) => {\n    if (total === 0) return 0;\n    return Math.round((votes / total) * 100);\n  };\n\n  // Show invite link if private poll and ?showInvite=1 in query\n  const showInvite =\n    poll &&\n    poll.isPublic === false &&\n    poll.inviteToken &&\n    new URLSearchParams(location.search).get(\"showInvite\") === \"1\";\n\n  if (loading) {\n    return (\n      <div className=\"view-poll-page\">\n        <div className=\"container-sm\">\n          <div className=\"loading-container\">\n            <div className=\"spinner\"></div>\n            <p>Loading poll...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"view-poll-page\">\n        <div className=\"container-sm\">\n          <div className=\"alert alert-error\">\n            <i className=\"fas fa-exclamation-circle\"></i>\n            {error}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"view-poll-page\">\n      <div className=\"container-sm\">\n        {showInvite && (\n          <div className=\"alert alert-info\" style={{ marginBottom: 16 }}>\n            <i className=\"fas fa-link\"></i>\n            Invite link:{\" \"}\n            <a\n              href={`${window.location.origin}/poll/invite/${poll.inviteToken}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {window.location.origin}/poll/invite/{poll.inviteToken}\n            </a>\n          </div>\n        )}\n\n        <div className=\"poll-header\">\n          <h1>{poll.title}</h1>\n          {poll.description && <p>{poll.description}</p>}\n\n          <div className=\"poll-meta\">\n            <div className=\"poll-creator\">\n              <i className=\"fas fa-user\"></i>\n              <span>Created by {poll.creator?.name || \"Anonymous\"}</span>\n            </div>\n            <div className=\"poll-stats\">\n              <span>\n                <i className=\"fas fa-chart-bar\"></i> {poll.totalResponses}{\" \"}\n                responses\n              </span>\n            </div>\n          </div>\n        </div>\n\n        {!user && (\n          <div className=\"alert alert-warning\" style={{ marginBottom: 16 }}>\n            <i className=\"fas fa-lock\"></i>\n            You must be signed in to vote in this poll.\n          </div>\n        )}\n\n        {user && !hasVoted ? (\n          <form onSubmit={handleSubmit} className=\"poll-form\">\n            {poll.questions.map((question, index) => (\n              <div key={question._id} className=\"question-container\">\n                <h3>Question {index + 1}</h3>\n                <p className=\"question-text\">{question.question}</p>\n\n                <div className=\"options-container\">\n                  {question.options.map((option, optionIndex) => (\n                    <label key={optionIndex} className=\"option-label\">\n                      <input\n                        type=\"radio\"\n                        name={question._id}\n                        value={optionIndex}\n                        onChange={(e) =>\n                          handleAnswerChange(\n                            question._id,\n                            parseInt(e.target.value)\n                          )\n                        }\n                        required={question.required}\n                      />\n                      <span className=\"option-text\">{option.text}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n            ))}\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary btn-lg btn-full\"\n              disabled={submitting}\n            >\n              {submitting ? (\n                <>\n                  <div className=\"spinner\"></div>\n                  Submitting...\n                </>\n              ) : (\n                <>\n                  <i className=\"fas fa-vote-yea\"></i>\n                  Submit Vote\n                </>\n              )}\n            </button>\n          </form>\n        ) : !user ? null : (\n          <div className=\"poll-results\">\n            <div className=\"results-header\">\n              <h2>Results</h2>\n              <p>Thank you for voting! Here are the current results:</p>\n            </div>\n\n            {poll.questions.map((question, index) => (\n              <div key={question._id} className=\"question-results\">\n                <h3>Question {index + 1}</h3>\n                <p className=\"question-text\">{question.question}</p>\n\n                <div className=\"results-container\">\n                  {question.options.map((option, optionIndex) => {\n                    const percentage = calculatePercentage(\n                      option.votes,\n                      poll.totalResponses\n                    );\n                    return (\n                      <div key={optionIndex} className=\"result-option\">\n                        <div className=\"result-header\">\n                          <span className=\"option-text\">{option.text}</span>\n                          <span className=\"result-percentage\">\n                            {percentage}%\n                          </span>\n                        </div>\n                        <div className=\"result-bar\">\n                          <div\n                            className=\"result-fill\"\n                            style={{ width: `${percentage}%` }}\n                          ></div>\n                        </div>\n                        <div className=\"result-votes\">{option.votes} votes</div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ViewPoll;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}