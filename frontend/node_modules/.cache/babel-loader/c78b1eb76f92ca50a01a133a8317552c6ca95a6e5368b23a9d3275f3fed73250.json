{"ast":null,"code":"var _jsxFileName = \"D:\\\\voting\\\\voting_app\\\\frontend\\\\src\\\\components\\\\GoogleSignIn.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GoogleSignIn = ({\n  onSuccess,\n  onError,\n  loading,\n  buttonText = \"Continue with Google\"\n}) => {\n  _s();\n  useEffect(() => {\n    // Load Google Identity Services script\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n    script.onload = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID || 'your-google-client-id',\n          callback: handleCredentialResponse\n        });\n      }\n    };\n    return () => {\n      // Cleanup\n      const existingScript = document.querySelector('script[src=\"https://accounts.google.com/gsi/client\"]');\n      if (existingScript) {\n        document.head.removeChild(existingScript);\n      }\n    };\n  }, []);\n  const handleCredentialResponse = async response => {\n    try {\n      // Decode the JWT token to get user info\n      const userInfo = parseJwt(response.credential);\n      const userData = {\n        credential: response.credential,\n        name: userInfo.name,\n        email: userInfo.email,\n        picture: userInfo.picture\n      };\n\n      // Send to backend\n      const backendResponse = await axios.post('/api/auth/google', userData);\n      if (onSuccess) {\n        onSuccess(backendResponse.data);\n      }\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n      if (onError) {\n        var _error$response, _error$response$data;\n        onError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Google sign-in failed');\n      }\n    }\n  };\n  const parseJwt = token => {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      console.error('Error parsing JWT:', error);\n      return {};\n    }\n  };\n  const handleGoogleSignIn = () => {\n    if (window.google) {\n      window.google.accounts.id.prompt();\n    } else {\n      // Fallback to demo mode if Google SDK not loaded\n      handleDemoSignIn();\n    }\n  };\n  const handleDemoSignIn = async () => {\n    try {\n      const demoUserData = {\n        name: 'Demo Google User',\n        email: 'demo@gmail.com',\n        picture: 'https://via.placeholder.com/150'\n      };\n      const response = await axios.post('/api/auth/google', demoUserData);\n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n    } catch (error) {\n      console.error('Demo Google sign-in error:', error);\n      if (onError) {\n        var _error$response2, _error$response2$data;\n        onError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Demo Google sign-in failed');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleGoogleSignIn,\n    className: \"btn btn-outline btn-full\",\n    disabled: loading,\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), \"Signing in with Google...\"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fab fa-google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), buttonText]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSignIn, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GoogleSignIn;\nexport default GoogleSignIn;\nvar _c;\n$RefreshReg$(_c, \"GoogleSignIn\");","map":{"version":3,"names":["React","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GoogleSignIn","onSuccess","onError","loading","buttonText","_s","script","document","createElement","src","async","defer","head","appendChild","onload","window","google","accounts","id","initialize","client_id","process","env","REACT_APP_GOOGLE_CLIENT_ID","callback","handleCredentialResponse","existingScript","querySelector","removeChild","response","userInfo","parseJwt","credential","userData","name","email","picture","backendResponse","post","data","error","console","_error$response","_error$response$data","message","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","handleGoogleSignIn","prompt","handleDemoSignIn","demoUserData","_error$response2","_error$response2$data","onClick","className","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/voting/voting_app/frontend/src/components/GoogleSignIn.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\n\nconst GoogleSignIn = ({ onSuccess, onError, loading, buttonText = \"Continue with Google\" }) => {\n  useEffect(() => {\n    // Load Google Identity Services script\n    const script = document.createElement('script');\n    script.src = 'https://accounts.google.com/gsi/client';\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n\n    script.onload = () => {\n      if (window.google) {\n        window.google.accounts.id.initialize({\n          client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID || 'your-google-client-id',\n          callback: handleCredentialResponse,\n        });\n      }\n    };\n\n    return () => {\n      // Cleanup\n      const existingScript = document.querySelector('script[src=\"https://accounts.google.com/gsi/client\"]');\n      if (existingScript) {\n        document.head.removeChild(existingScript);\n      }\n    };\n  }, []);\n\n  const handleCredentialResponse = async (response) => {\n    try {\n      // Decode the JWT token to get user info\n      const userInfo = parseJwt(response.credential);\n      \n      const userData = {\n        credential: response.credential,\n        name: userInfo.name,\n        email: userInfo.email,\n        picture: userInfo.picture\n      };\n\n      // Send to backend\n      const backendResponse = await axios.post('/api/auth/google', userData);\n      \n      if (onSuccess) {\n        onSuccess(backendResponse.data);\n      }\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n      if (onError) {\n        onError(error.response?.data?.message || 'Google sign-in failed');\n      }\n    }\n  };\n\n  const parseJwt = (token) => {\n    try {\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    } catch (error) {\n      console.error('Error parsing JWT:', error);\n      return {};\n    }\n  };\n\n  const handleGoogleSignIn = () => {\n    if (window.google) {\n      window.google.accounts.id.prompt();\n    } else {\n      // Fallback to demo mode if Google SDK not loaded\n      handleDemoSignIn();\n    }\n  };\n\n  const handleDemoSignIn = async () => {\n    try {\n      const demoUserData = {\n        name: 'Demo Google User',\n        email: 'demo@gmail.com',\n        picture: 'https://via.placeholder.com/150'\n      };\n\n      const response = await axios.post('/api/auth/google', demoUserData);\n      \n      if (onSuccess) {\n        onSuccess(response.data);\n      }\n    } catch (error) {\n      console.error('Demo Google sign-in error:', error);\n      if (onError) {\n        onError(error.response?.data?.message || 'Demo Google sign-in failed');\n      }\n    }\n  };\n\n  return (\n    <button \n      onClick={handleGoogleSignIn}\n      className=\"btn btn-outline btn-full\"\n      disabled={loading}\n    >\n      {loading ? (\n        <>\n          <div className=\"spinner\"></div>\n          Signing in with Google...\n        </>\n      ) : (\n        <>\n          <i className=\"fab fa-google\"></i>\n          {buttonText}\n        </>\n      )}\n    </button>\n  );\n};\n\nexport default GoogleSignIn;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}